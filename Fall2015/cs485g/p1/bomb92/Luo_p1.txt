Script started on Thu 01 Oct 2015 09:15:03 AM EDT
]0;ylu236@ylu236: ~/fall2015/cs485g/p1/bomb92ylu236@ylu236:~/fall2015/cs485g/p1/bomb92$ gdb bomb 
GNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1
Copyright (C) 2014 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from bomb...done.
(gdb) b phase_1
Breakpoint 1 at 0x8048c00
(gdb) b explode [K_bomb
Breakpoint 2 at 0x8049455
(gdb) define rt
Type commands for definition of "rt".
End with a line saying just "end".
>ni
>disas
>end
(gdb) rt
The program is not being run.
(gdb) r [K[Kr[Kr Defuse_Commands.txt 
Starting program: /home/ylu236/fall2015/cs485g/p1/bomb92/bomb Defuse_Commands.txt
Welcome to my fiendish little bomb. You have 6 phases with
which to blow yourself up. Have a nice day!

Breakpoint 1, 0x08048c00 in phase_1 ()
(gdb) rt
0x08048c03 in phase_1 ()
Dump of assembler code for function phase_1:
   0x08048c00 <+0>:	sub    $0x1c,%esp
=> 0x08048c03 <+3>:	movl   $0x804a49c,0x4(%esp)
   0x08048c0b <+11>:	mov    0x20(%esp),%eax
   0x08048c0f <+15>:	mov    %eax,(%esp)
   0x08048c12 <+18>:	call   0x804915a <strings_not_equal>
   0x08048c17 <+23>:	test   %eax,%eax
   0x08048c19 <+25>:	je     0x8048c20 <phase_1+32>
   0x08048c1b <+27>:	call   0x8049455 <explode_bomb>
   0x08048c20 <+32>:	add    $0x1c,%esp
   0x08048c23 <+35>:	ret    
End of assembler dump.
(gdb) rt
0x08048c0b in phase_1 ()
Dump of assembler code for function phase_1:
   0x08048c00 <+0>:	sub    $0x1c,%esp
   0x08048c03 <+3>:	movl   $0x804a49c,0x4(%esp)
=> 0x08048c0b <+11>:	mov    0x20(%esp),%eax
   0x08048c0f <+15>:	mov    %eax,(%esp)
   0x08048c12 <+18>:	call   0x804915a <strings_not_equal>
   0x08048c17 <+23>:	test   %eax,%eax
   0x08048c19 <+25>:	je     0x8048c20 <phase_1+32>
   0x08048c1b <+27>:	call   0x8049455 <explode_bomb>
   0x08048c20 <+32>:	add    $0x1c,%esp
   0x08048c23 <+35>:	ret    
End of assembler dump.
(gdb) i r
eax            0x804d820	134535200
ecx            0x24	36
edx            0x1	1
ebx            0xffffd6c4	-10556
esp            0xffffd5f0	0xffffd5f0
ebp            0xffffd628	0xffffd628
esi            0x0	0
edi            0x0	0
eip            0x8048c0b	0x8048c0b <phase_1+11>
eflags         0x286	[ PF SF IF ]
cs             0x23	35
ss             0x2b	43
ds             0x2b	43
es             0x2b	43
fs             0x0	0
gs             0x63	99
(gdb) print[Kt (char*) 0x804d820
$1 = 0x804d820 <input_strings> "SA, space is still a high priority."
(gdb) print (char*) 0x804d820[K[K[K[K[K[K[K[K[KF7FAFDD0
No symbol "F7FAFDD0" in current context.
(gdb) print (char*) F7FAFDD00F7FAFDD0xF7FAFDD0
$2 = 0xf7fafdd0 "\240\337\370\377\025"
(gdb) x/s [K[K[K[Kprint (char*) 0xF7FAFDD0[1P 0xF7FAFDD0[1P 0xF7FAFDD0[1P 0xF7FAFDD0[1P 0xF7FAFDD0[1P 0xF7FAFDD0[1P 0xF7FAFDD0[1P 0xF7FAFDD0[1P0xF7FAFDD0[1P 0xF7FAFDD0[1P 0xF7FAFDD0[C[C[C[C[C[C[C[C[C[1P 0xF7FAFDD0[C[C[C[C[C[C[C[C[1P 0xF7FAFDD0[C[C[C[C[C[C[C[1P 0xF7FAFDD0[C[C[C[C[C[Cx 0xF7FAFDD0[C[C[C[C[C[C[C/ 0xF7FAFDD0[C[C[C[C[C[C[C[Cs 0xF7FAFDD0[C[C[C[C[C[C[C[C[C
0xf7fafdd0:	"\240\337\370\377\025"
(gdb) /[Kprint x[K[K[K[K[K[K[Kx/s 0xF7FAFDF0
0xf7fafdf0:	" \376\366\377\213"
(gdb) x/s[K[K[Kprint /[K[K[K[K[K[K[Kx/s 0xF7FAFDF0D0[C[C[C[C[C[C[10@print (char*)[C[C[C[C[C[C[C[C[C[C[C
$3 = 0xf7fafdd0 "\240\337\370\377\025"
(gdb) print (char*) 0xF7FAFDD0[C[C[C[C[C[C[10Px/s 0xF7FAFDF0D0[C[C[C[C[C[C[10@print (char*)[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K0x804d820
$4 = 0x804d820 <input_strings> "SA, space is still a high priority."
(gdb) rt
0x08048c0f in phase_1 ()
Dump of assembler code for function phase_1:
   0x08048c00 <+0>:	sub    $0x1c,%esp
   0x08048c03 <+3>:	movl   $0x804a49c,0x4(%esp)
   0x08048c0b <+11>:	mov    0x20(%esp),%eax
=> 0x08048c0f <+15>:	mov    %eax,(%esp)
   0x08048c12 <+18>:	call   0x804915a <strings_not_equal>
   0x08048c17 <+23>:	test   %eax,%eax
   0x08048c19 <+25>:	je     0x8048c20 <phase_1+32>
   0x08048c1b <+27>:	call   0x8049455 <explode_bomb>
   0x08048c20 <+32>:	add    $0x1c,%esp
   0x08048c23 <+35>:	ret    
End of assembler dump.
(gdb) 
0x08048c12 in phase_1 ()
Dump of assembler code for function phase_1:
   0x08048c00 <+0>:	sub    $0x1c,%esp
   0x08048c03 <+3>:	movl   $0x804a49c,0x4(%esp)
   0x08048c0b <+11>:	mov    0x20(%esp),%eax
   0x08048c0f <+15>:	mov    %eax,(%esp)
=> 0x08048c12 <+18>:	call   0x804915a <strings_not_equal>
   0x08048c17 <+23>:	test   %eax,%eax
   0x08048c19 <+25>:	je     0x8048c20 <phase_1+32>
   0x08048c1b <+27>:	call   0x8049455 <explode_bomb>
   0x08048c20 <+32>:	add    $0x1c,%esp
   0x08048c23 <+35>:	ret    
End of assembler dump.
(gdb) x/s *(char*)$eax
0x53:	<error: Cannot access memory at address 0x53>
(gdb) x/s *(char*)$eax[K[K[K[K $e[K[K[K[K)$esp
0x20:	<error: Cannot access memory at address 0x20>
(gdb) x/s *(char*)$esp*)$esp[C[C[C[C[C[K[Kax
0x202c4153:	<error: Cannot access memory at address 0x202c4153>
(gdb) x/s *(char**)$eax[K[Ksp
0x804d820 <input_strings>:	"SA, space is still a high priority."
(gdb) x/s *(char**)$esp($esp[C[C[C[C+4)
0x804a49c:	"For NASA, space is still a high priority."
(gdb) rt
0x08048c17 in phase_1 ()
Dump of assembler code for function phase_1:
   0x08048c00 <+0>:	sub    $0x1c,%esp
   0x08048c03 <+3>:	movl   $0x804a49c,0x4(%esp)
   0x08048c0b <+11>:	mov    0x20(%esp),%eax
   0x08048c0f <+15>:	mov    %eax,(%esp)
   0x08048c12 <+18>:	call   0x804915a <strings_not_equal>
=> 0x08048c17 <+23>:	test   %eax,%eax
   0x08048c19 <+25>:	je     0x8048c20 <phase_1+32>
   0x08048c1b <+27>:	call   0x8049455 <explode_bomb>
   0x08048c20 <+32>:	add    $0x1c,%esp
   0x08048c23 <+35>:	ret    
End of assembler dump.
(gdb) rt
0x08048c19 in phase_1 ()
Dump of assembler code for function phase_1:
   0x08048c00 <+0>:	sub    $0x1c,%esp
   0x08048c03 <+3>:	movl   $0x804a49c,0x4(%esp)
   0x08048c0b <+11>:	mov    0x20(%esp),%eax
   0x08048c0f <+15>:	mov    %eax,(%esp)
   0x08048c12 <+18>:	call   0x804915a <strings_not_equal>
   0x08048c17 <+23>:	test   %eax,%eax
=> 0x08048c19 <+25>:	je     0x8048c20 <phase_1+32>
   0x08048c1b <+27>:	call   0x8049455 <explode_bomb>
   0x08048c20 <+32>:	add    $0x1c,%esp
   0x08048c23 <+35>:	ret    
End of assembler dump.
(gdb) rt
0x08048c1b in phase_1 ()
Dump of assembler code for function phase_1:
   0x08048c00 <+0>:	sub    $0x1c,%esp
   0x08048c03 <+3>:	movl   $0x804a49c,0x4(%esp)
   0x08048c0b <+11>:	mov    0x20(%esp),%eax
   0x08048c0f <+15>:	mov    %eax,(%esp)
   0x08048c12 <+18>:	call   0x804915a <strings_not_equal>
   0x08048c17 <+23>:	test   %eax,%eax
   0x08048c19 <+25>:	je     0x8048c20 <phase_1+32>
=> 0x08048c1b <+27>:	call   0x8049455 <explode_bomb>
   0x08048c20 <+32>:	add    $0x1c,%esp
   0x08048c23 <+35>:	ret    
End of assembler dump.
(gdb) q
A debugging session is active.

	Inferior 1 [process 11418] will be killed.

Quit anyway? (y or n) y
]0;ylu236@ylu236: ~/fall2015/cs485g/p1/bomb92ylu236@ylu236:~/fall2015/cs485g/p1/bomb92$ vi[K[Kls -l
total 44
-rwxrwxr-x 1 ylu236 ylu236 28104 Oct  1 09:01 [0m[01;32mbomb[0m
-rw-r--r-- 1 ylu236 ylu236  3545 Oct  1 09:01 bomb.c
-rw-rw-r-- 1 ylu236 ylu236    36 Oct  1 09:13 Defuse_Commands.txt
-rw-rw-r-- 1 ylu236 ylu236  4096 Oct  1 09:22 Luo_p1.txt
-rw-rw-r-- 1 ylu236 ylu236    56 Oct  1 09:01 README
]0;ylu236@ylu236: ~/fall2015/cs485g/p1/bomb92ylu236@ylu236:~/fall2015/cs485g/p1/bomb92$ vim Defuse_Commands.txt 
[?1049h[?1h=[2;1Hâ–½[6n[1;1H  [1;1H[1;42r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[42;1H"Defuse_Commands.txt" 1L, 36C[>c[1;1HSA, space is still a high priority.
[94m~                                                                                                                                 [3;1H~                                                                                                                                 [4;1H~                                                                                                                                 [5;1H~                                                                                                                                 [6;1H~                                                                                                                                 [7;1H~                                                                                                                                 [8;1H~                                                                                                                                 [9;1H~                                                                                                                                 [10;1H~                                                                                                                                 [11;1H~                                                                                                                                 [12;1H~                                                                                                                                 [13;1H~                                                                                                                                 [14;1H~                                                                                                                                 [15;1H~                                                                                                                                 [16;1H~                                                                                                                                 [17;1H~                                                                                                                                 [18;1H~                                                                                                                                 [19;1H~                                                                                                                                 [20;1H~                                                                                                                                 [21;1H~                                                                                                                                 [22;1H~                                                                                                                                 [23;1H~                                                                                                                                 [24;1H~                                                                                                                                 [25;1H~                                                                                                                                 [26;1H~                                                                                                                                 [27;1H~                                                                                                                                 [28;1H~                                                                                                                                 [29;1H~                                                                                                                                 [30;1H~                                                                                                                                 [31;1H~                                                                                                                                 [32;1H~                                                                                                                                 [33;1H~                                                                                                                                 [34;1H~                                                                                                                                 [35;1H~                                                                                                                                 [36;1H~                                                                                                                                 [37;1H~                                                                                                                                 [38;1H~                                                                                                                                 [39;1H~                                                                                                                                 [40;1H~                                                                                                                                 [41;1H~                                                                                                                                 [m[42;113H1,1[11CAll[1;1H[?12l[?25h[?25l[1;1H[K[42;1H--No lines in buffer--[42;23H[K[42;113H0,0-1[9CAll[1;1H[?12l[?25h[?25l[?12l[?25h[?25l[42;1H?\<buff\>[42;10H[K[42;1H[31msearch hit TOP, continuing at BOTTOM[m[97m[41mE486: Pattern not found: \<buff\>[m[42;34H[K[42;113H0,0-1[9CAll[1;1H[?12l[?25h[?25l[42;1H[1m-- INSERT --[m[42;13H[K[42;113H0,1[11CAll[1;1HSA, space is still a high priority.[42;113H1,36[1;36H[?12l[?25h[?25l[42;116H5[1;35H[?12l[?25h[?25l[42;116H4[1;34H[?12l[?25h[?25l[42;116H3[1;33H[?12l[?25h[?25l[42;116H2[1;32H[?12l[?25h[?25l[42;116H1[1;31H[?12l[?25h[?25l[42;116H0[1;30H[?12l[?25h[?25l[42;115H29[1;29H[?12l[?25h[?25l[42;116H8[1;28H[?12l[?25h[?25l[42;116H7[1;27H[?12l[?25h[?25l[42;116H6[1;26H[?12l[?25h[?25l[42;116H5[1;25H[?12l[?25h[?25l[42;116H4[1;24H[?12l[?25h[?25l[42;116H3[1;23H[?12l[?25h[?25l[42;116H2[1;22H[?12l[?25h[?25l[42;116H1[1;21H[?12l[?25h[?25l[42;116H0[1;20H[?12l[?25h[?25l[42;115H19[1;19H[?12l[?25h[?25l[42;116H8[1;18H[?12l[?25h[?25l[42;116H7[1;17H[?12l[?25h[?25l[42;116H6[1;16H[?12l[?25h[?25l[42;116H5[1;15H[?12l[?25h[?25l[42;116H4[1;14H[?12l[?25h[?25l[42;116H3[1;13H[?12l[?25h[?25l[42;116H2[1;12H[?12l[?25h[?25l[42;116H1[1;11H[?12l[?25h[?25l[42;116H0[1;10H[?12l[?25h[?25l[42;115H9 [1;9H[?12l[?25h[?25l[42;115H8[1;8H[?12l[?25h[?25l[42;115H7[1;7H[?12l[?25h[?25l[42;115H6[1;6H[?12l[?25h[?25l[42;115H5[1;5H[?12l[?25h[?25l[42;115H4[1;4H[?12l[?25h[?25l[42;115H3[1;3H[?12l[?25h[?25l[42;115H2[1;2H[?12l[?25h[?25l[42;115H1[1;1H[?12l[?25h[42;1H[K[1;1H[?25l[42;113H1,1[11CAll[1;1H[?12l[?25h[?25l[1;1H[K[42;1H--No lines in buffer--[42;113H[K[42;113H0,0-1[9CAll[1;1H[?12l[?25h[?25l[42;1H[1m-- INSERT --[m[42;13H[K[42;113H0,1[11CAll[1;1H[?12l[?25h[?25lFor NASA, space is still a high priority.[42;113H1,42[1;42H[?12l[?25h[42;1H[K[1;41H[?25l[42;113H1,41[10CAll[1;41H[?12l[?25h[?25l[42;113H[K[42;1H:[?12l[?25hw[?25l[?12l[?25hq[?25l[?12l[?25h![?25l[?12l[?25h[?25l"Defuse_Commands.txt" 1L, 42C written
[?1l>[?12l[?25h[?1049l]0;ylu236@ylu236: ~/fall2015/cs485g/p1/bomb92ylu236@ylu236:~/fall2015/cs485g/p1/bomb92$ gbd bomb
No command 'gbd' found, did you mean:
 Command 'dbd' from package 'netatalk' (universe)
 Command 'rbd' from package 'ceph-common' (main)
 Command 'gid' from package 'id-utils' (universe)
 Command 'gdb' from package 'gdb-minimal' (universe)
 Command 'gdb' from package 'gdb' (main)
 Command 'gbp' from package 'git-buildpackage' (universe)
 Command 'gwd' from package 'geneweb' (universe)
 Command 'god' from package 'ruby-god' (universe)
 Command 'gld' from package 'postfix-gld' (universe)
gbd: command not found
]0;ylu236@ylu236: ~/fall2015/cs485g/p1/bomb92ylu236@ylu236:~/fall2015/cs485g/p1/bomb92$ cd [K[K[Kgdb bomb 
GNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1
Copyright (C) 2014 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from bomb...done.
(gdb) b phase_1
Breakpoint 1 at 0x8048c00
(gdb) b explode_bomb
Breakpoint 2 at 0x8049455
(gdb) define rt
Type commands for definition of "rt".
End with a line saying just "end".
>ni
>disas
>end
(gdb) r[Kr Defuse_Commands.txt 
Starting program: /home/ylu236/fall2015/cs485g/p1/bomb92/bomb Defuse_Commands.txt
Welcome to my fiendish little bomb. You have 6 phases with
which to blow yourself up. Have a nice day!

Breakpoint 1, 0x08048c00 in phase_1 ()
(gdb) rt
0x08048c03 in phase_1 ()
Dump of assembler code for function phase_1:
   0x08048c00 <+0>:	sub    $0x1c,%esp
=> 0x08048c03 <+3>:	movl   $0x804a49c,0x4(%esp)
   0x08048c0b <+11>:	mov    0x20(%esp),%eax
   0x08048c0f <+15>:	mov    %eax,(%esp)
   0x08048c12 <+18>:	call   0x804915a <strings_not_equal>
   0x08048c17 <+23>:	test   %eax,%eax
   0x08048c19 <+25>:	je     0x8048c20 <phase_1+32>
   0x08048c1b <+27>:	call   0x8049455 <explode_bomb>
   0x08048c20 <+32>:	add    $0x1c,%esp
   0x08048c23 <+35>:	ret    
End of assembler dump.
(gdb) rt
0x08048c0b in phase_1 ()
Dump of assembler code for function phase_1:
   0x08048c00 <+0>:	sub    $0x1c,%esp
   0x08048c03 <+3>:	movl   $0x804a49c,0x4(%esp)
=> 0x08048c0b <+11>:	mov    0x20(%esp),%eax
   0x08048c0f <+15>:	mov    %eax,(%esp)
   0x08048c12 <+18>:	call   0x804915a <strings_not_equal>
   0x08048c17 <+23>:	test   %eax,%eax
   0x08048c19 <+25>:	je     0x8048c20 <phase_1+32>
   0x08048c1b <+27>:	call   0x8049455 <explode_bomb>
   0x08048c20 <+32>:	add    $0x1c,%esp
   0x08048c23 <+35>:	ret    
End of assembler dump.
(gdb) rt
0x08048c0f in phase_1 ()
Dump of assembler code for function phase_1:
   0x08048c00 <+0>:	sub    $0x1c,%esp
   0x08048c03 <+3>:	movl   $0x804a49c,0x4(%esp)
   0x08048c0b <+11>:	mov    0x20(%esp),%eax
=> 0x08048c0f <+15>:	mov    %eax,(%esp)
   0x08048c12 <+18>:	call   0x804915a <strings_not_equal>
   0x08048c17 <+23>:	test   %eax,%eax
   0x08048c19 <+25>:	je     0x8048c20 <phase_1+32>
   0x08048c1b <+27>:	call   0x8049455 <explode_bomb>
   0x08048c20 <+32>:	add    $0x1c,%esp
   0x08048c23 <+35>:	ret    
End of assembler dump.
(gdb) rt
0x08048c12 in phase_1 ()
Dump of assembler code for function phase_1:
   0x08048c00 <+0>:	sub    $0x1c,%esp
   0x08048c03 <+3>:	movl   $0x804a49c,0x4(%esp)
   0x08048c0b <+11>:	mov    0x20(%esp),%eax
   0x08048c0f <+15>:	mov    %eax,(%esp)
=> 0x08048c12 <+18>:	call   0x804915a <strings_not_equal>
   0x08048c17 <+23>:	test   %eax,%eax
   0x08048c19 <+25>:	je     0x8048c20 <phase_1+32>
   0x08048c1b <+27>:	call   0x8049455 <explode_bomb>
   0x08048c20 <+32>:	add    $0x1c,%esp
   0x08048c23 <+35>:	ret    
End of assembler dump.
(gdb) rt
0x08048c17 in phase_1 ()
Dump of assembler code for function phase_1:
   0x08048c00 <+0>:	sub    $0x1c,%esp
   0x08048c03 <+3>:	movl   $0x804a49c,0x4(%esp)
   0x08048c0b <+11>:	mov    0x20(%esp),%eax
   0x08048c0f <+15>:	mov    %eax,(%esp)
   0x08048c12 <+18>:	call   0x804915a <strings_not_equal>
=> 0x08048c17 <+23>:	test   %eax,%eax
   0x08048c19 <+25>:	je     0x8048c20 <phase_1+32>
   0x08048c1b <+27>:	call   0x8049455 <explode_bomb>
   0x08048c20 <+32>:	add    $0x1c,%esp
   0x08048c23 <+35>:	ret    
End of assembler dump.
(gdb) rt
0x08048c19 in phase_1 ()
Dump of assembler code for function phase_1:
   0x08048c00 <+0>:	sub    $0x1c,%esp
   0x08048c03 <+3>:	movl   $0x804a49c,0x4(%esp)
   0x08048c0b <+11>:	mov    0x20(%esp),%eax
   0x08048c0f <+15>:	mov    %eax,(%esp)
   0x08048c12 <+18>:	call   0x804915a <strings_not_equal>
   0x08048c17 <+23>:	test   %eax,%eax
=> 0x08048c19 <+25>:	je     0x8048c20 <phase_1+32>
   0x08048c1b <+27>:	call   0x8049455 <explode_bomb>
   0x08048c20 <+32>:	add    $0x1c,%esp
   0x08048c23 <+35>:	ret    
End of assembler dump.
(gdb) rt
0x08048c20 in phase_1 ()
Dump of assembler code for function phase_1:
   0x08048c00 <+0>:	sub    $0x1c,%esp
   0x08048c03 <+3>:	movl   $0x804a49c,0x4(%esp)
   0x08048c0b <+11>:	mov    0x20(%esp),%eax
   0x08048c0f <+15>:	mov    %eax,(%esp)
   0x08048c12 <+18>:	call   0x804915a <strings_not_equal>
   0x08048c17 <+23>:	test   %eax,%eax
   0x08048c19 <+25>:	je     0x8048c20 <phase_1+32>
   0x08048c1b <+27>:	call   0x8049455 <explode_bomb>
=> 0x08048c20 <+32>:	add    $0x1c,%esp
   0x08048c23 <+35>:	ret    
End of assembler dump.
(gdb) rt
0x08048c23 in phase_1 ()
Dump of assembler code for function phase_1:
   0x08048c00 <+0>:	sub    $0x1c,%esp
   0x08048c03 <+3>:	movl   $0x804a49c,0x4(%esp)
   0x08048c0b <+11>:	mov    0x20(%esp),%eax
   0x08048c0f <+15>:	mov    %eax,(%esp)
   0x08048c12 <+18>:	call   0x804915a <strings_not_equal>
   0x08048c17 <+23>:	test   %eax,%eax
   0x08048c19 <+25>:	je     0x8048c20 <phase_1+32>
   0x08048c1b <+27>:	call   0x8049455 <explode_bomb>
   0x08048c20 <+32>:	add    $0x1c,%esp
=> 0x08048c23 <+35>:	ret    
End of assembler dump.
(gdb) rt
main (argc=2, argv=0xffffd6c4) at bomb.c:67
67	    phase_defused();                 /* Drat!  They figured it out!
Dump of assembler code for function main:
   0x08048a8d <+0>:	push   %ebp
   0x08048a8e <+1>:	mov    %esp,%ebp
   0x08048a90 <+3>:	push   %ebx
   0x08048a91 <+4>:	and    $0xfffffff0,%esp
   0x08048a94 <+7>:	sub    $0x10,%esp
   0x08048a97 <+10>:	mov    0x8(%ebp),%eax
   0x08048a9a <+13>:	mov    0xc(%ebp),%ebx
   0x08048a9d <+16>:	cmp    $0x1,%eax
   0x08048aa0 <+19>:	jne    0x8048aae <main+33>
   0x08048aa2 <+21>:	mov    0x804d7e4,%eax
   0x08048aa7 <+26>:	mov    %eax,0x804d80c
   0x08048aac <+31>:	jmp    0x8048b22 <main+149>
   0x08048aae <+33>:	cmp    $0x2,%eax
   0x08048ab1 <+36>:	jne    0x8048afc <main+111>
   0x08048ab3 <+38>:	movl   $0x804a360,0x4(%esp)
   0x08048abb <+46>:	mov    0x4(%ebx),%eax
   0x08048abe <+49>:	mov    %eax,(%esp)
   0x08048ac1 <+52>:	call   0x80488e0 <fopen@plt>
   0x08048ac6 <+57>:	mov    %eax,0x804d80c
   0x08048acb <+62>:	test   %eax,%eax
   0x08048acd <+64>:	jne    0x8048b22 <main+149>
   0x08048acf <+66>:	mov    0x4(%ebx),%eax
   0x08048ad2 <+69>:	mov    %eax,0xc(%esp)
   0x08048ad6 <+73>:	mov    (%ebx),%eax
   0x08048ad8 <+75>:	mov    %eax,0x8(%esp)
   0x08048adc <+79>:	movl   $0x804a362,0x4(%esp)
   0x08048ae4 <+87>:	movl   $0x1,(%esp)
   0x08048aeb <+94>:	call   0x8048900 <__printf_chk@plt>
   0x08048af0 <+99>:	movl   $0x8,(%esp)
   0x08048af7 <+106>:	call   0x8048890 <exit@plt>
   0x08048afc <+111>:	mov    (%ebx),%eax
   0x08048afe <+113>:	mov    %eax,0x8(%esp)
   0x08048b02 <+117>:	movl   $0x804a37f,0x4(%esp)
   0x08048b0a <+125>:	movl   $0x1,(%esp)
   0x08048b11 <+132>:	call   0x8048900 <__printf_chk@plt>
   0x08048b16 <+137>:	movl   $0x8,(%esp)
   0x08048b1d <+144>:	call   0x8048890 <exit@plt>
   0x08048b22 <+149>:	call   0x80491c6 <initialize_bomb>
---Type <return> to continue, or q <return> to quit---
   0x08048b27 <+154>:	movl   $0x804a3e4,(%esp)
   0x08048b2e <+161>:	call   0x8048850 <puts@plt>
   0x08048b33 <+166>:	movl   $0x804a420,(%esp)
   0x08048b3a <+173>:	call   0x8048850 <puts@plt>
   0x08048b3f <+178>:	call   0x80494e4 <read_line>
   0x08048b44 <+183>:	mov    %eax,(%esp)
   0x08048b47 <+186>:	call   0x8048c00 <phase_1>
=> 0x08048b4c <+191>:	call   0x80495de <phase_defused>
   0x08048b51 <+196>:	movl   $0x804a44c,(%esp)
   0x08048b58 <+203>:	call   0x8048850 <puts@plt>
   0x08048b5d <+208>:	call   0x80494e4 <read_line>
   0x08048b62 <+213>:	mov    %eax,(%esp)
   0x08048b65 <+216>:	call   0x8048c24 <phase_2>
   0x08048b6a <+221>:	call   0x80495de <phase_defused>
   0x08048b6f <+226>:	movl   $0x804a399,(%esp)
   0x08048b76 <+233>:	call   0x8048850 <puts@plt>
   0x08048b7b <+238>:	call   0x80494e4 <read_line>
   0x08048b80 <+243>:	mov    %eax,(%esp)
   0x08048b83 <+246>:	call   0x8048c7a <phase_3>
   0x08048b88 <+251>:	call   0x80495de <phase_defused>
   0x08048b8d <+256>:	movl   $0x804a3b7,(%esp)
   0x08048b94 <+263>:	call   0x8048850 <puts@plt>
   0x08048b99 <+268>:	call   0x80494e4 <read_line>
   0x08048b9e <+273>:	mov    %eax,(%esp)
   0x08048ba1 <+276>:	call   0x8048e29 <phase_4>
   0x08048ba6 <+281>:	call   0x80495de <phase_defused>
   0x08048bab <+286>:	movl   $0x804a478,(%esp)
   0x08048bb2 <+293>:	call   0x8048850 <puts@plt>
   0x08048bb7 <+298>:	call   0x80494e4 <read_line>
   0x08048bbc <+303>:	mov    %eax,(%esp)
   0x08048bbf <+306>:	call   0x8048e92 <phase_5>
   0x08048bc4 <+311>:	call   0x80495de <phase_defused>
   0x08048bc9 <+316>:	movl   $0x804a3c6,(%esp)
   0x08048bd0 <+323>:	call   0x8048850 <puts@plt>
   0x08048bd5 <+328>:	call   0x80494e4 <read_line>
   0x08048bda <+333>:	mov    %eax,(%esp)
   0x08048bdd <+336>:	call   0x8048f1c <phase_6>
   0x08048be2 <+341>:	call   0x80495de <phase_defused>
   0x08048be7 <+346>:	mov    $0x0,%eax
   0x08048bec <+351>:	mov    -0x4(%ebp),%ebx
   0x08048bef <+354>:	leave  
---Type <return> to continue, or q <return> to quit---
   0x08048bf0 <+355>:	ret    
End of assembler dump.
(gdb) 
printf (__fmt=<optimized out>) at /usr/include/bits/stdio2.h:104
104	  return __printf_chk (__USE_FORTIFY_LEVEL - 1, __fmt, __va_arg_pack ());
Dump of assembler code for function main:
   0x08048a8d <+0>:	push   %ebp
   0x08048a8e <+1>:	mov    %esp,%ebp
   0x08048a90 <+3>:	push   %ebx
   0x08048a91 <+4>:	and    $0xfffffff0,%esp
   0x08048a94 <+7>:	sub    $0x10,%esp
   0x08048a97 <+10>:	mov    0x8(%ebp),%eax
   0x08048a9a <+13>:	mov    0xc(%ebp),%ebx
   0x08048a9d <+16>:	cmp    $0x1,%eax
   0x08048aa0 <+19>:	jne    0x8048aae <main+33>
   0x08048aa2 <+21>:	mov    0x804d7e4,%eax
   0x08048aa7 <+26>:	mov    %eax,0x804d80c
   0x08048aac <+31>:	jmp    0x8048b22 <main+149>
   0x08048aae <+33>:	cmp    $0x2,%eax
   0x08048ab1 <+36>:	jne    0x8048afc <main+111>
   0x08048ab3 <+38>:	movl   $0x804a360,0x4(%esp)
   0x08048abb <+46>:	mov    0x4(%ebx),%eax
   0x08048abe <+49>:	mov    %eax,(%esp)
   0x08048ac1 <+52>:	call   0x80488e0 <fopen@plt>
   0x08048ac6 <+57>:	mov    %eax,0x804d80c
   0x08048acb <+62>:	test   %eax,%eax
   0x08048acd <+64>:	jne    0x8048b22 <main+149>
   0x08048acf <+66>:	mov    0x4(%ebx),%eax
   0x08048ad2 <+69>:	mov    %eax,0xc(%esp)
   0x08048ad6 <+73>:	mov    (%ebx),%eax
   0x08048ad8 <+75>:	mov    %eax,0x8(%esp)
   0x08048adc <+79>:	movl   $0x804a362,0x4(%esp)
   0x08048ae4 <+87>:	movl   $0x1,(%esp)
   0x08048aeb <+94>:	call   0x8048900 <__printf_chk@plt>
   0x08048af0 <+99>:	movl   $0x8,(%esp)
   0x08048af7 <+106>:	call   0x8048890 <exit@plt>
   0x08048afc <+111>:	mov    (%ebx),%eax
   0x08048afe <+113>:	mov    %eax,0x8(%esp)
   0x08048b02 <+117>:	movl   $0x804a37f,0x4(%esp)
   0x08048b0a <+125>:	movl   $0x1,(%esp)
   0x08048b11 <+132>:	call   0x8048900 <__printf_chk@plt>
   0x08048b16 <+137>:	movl   $0x8,(%esp)
   0x08048b1d <+144>:	call   0x8048890 <exit@plt>
   0x08048b22 <+149>:	call   0x80491c6 <initialize_bomb>
---Type <return> to continue, or q <return> to quit---
   0x08048b27 <+154>:	movl   $0x804a3e4,(%esp)
   0x08048b2e <+161>:	call   0x8048850 <puts@plt>
   0x08048b33 <+166>:	movl   $0x804a420,(%esp)
   0x08048b3a <+173>:	call   0x8048850 <puts@plt>
   0x08048b3f <+178>:	call   0x80494e4 <read_line>
   0x08048b44 <+183>:	mov    %eax,(%esp)
   0x08048b47 <+186>:	call   0x8048c00 <phase_1>
   0x08048b4c <+191>:	call   0x80495de <phase_defused>
=> 0x08048b51 <+196>:	movl   $0x804a44c,(%esp)
   0x08048b58 <+203>:	call   0x8048850 <puts@plt>
   0x08048b5d <+208>:	call   0x80494e4 <read_line>
   0x08048b62 <+213>:	mov    %eax,(%esp)
   0x08048b65 <+216>:	call   0x8048c24 <phase_2>
   0x08048b6a <+221>:	call   0x80495de <phase_defused>
   0x08048b6f <+226>:	movl   $0x804a399,(%esp)
   0x08048b76 <+233>:	call   0x8048850 <puts@plt>
   0x08048b7b <+238>:	call   0x80494e4 <read_line>
   0x08048b80 <+243>:	mov    %eax,(%esp)
   0x08048b83 <+246>:	call   0x8048c7a <phase_3>
   0x08048b88 <+251>:	call   0x80495de <phase_defused>
   0x08048b8d <+256>:	movl   $0x804a3b7,(%esp)
   0x08048b94 <+263>:	call   0x8048850 <puts@plt>
   0x08048b99 <+268>:	call   0x80494e4 <read_line>
   0x08048b9e <+273>:	mov    %eax,(%esp)
   0x08048ba1 <+276>:	call   0x8048e29 <phase_4>
   0x08048ba6 <+281>:	call   0x80495de <phase_defused>
   0x08048bab <+286>:	movl   $0x804a478,(%esp)
   0x08048bb2 <+293>:	call   0x8048850 <puts@plt>
   0x08048bb7 <+298>:	call   0x80494e4 <read_line>
   0x08048bbc <+303>:	mov    %eax,(%esp)
   0x08048bbf <+306>:	call   0x8048e92 <phase_5>
   0x08048bc4 <+311>:	call   0x80495de <phase_defused>
   0x08048bc9 <+316>:	movl   $0x804a3c6,(%esp)
   0x08048bd0 <+323>:	call   0x8048850 <puts@plt>
   0x08048bd5 <+328>:	call   0x80494e4 <read_line>
   0x08048bda <+333>:	mov    %eax,(%esp)
   0x08048bdd <+336>:	call   0x8048f1c <phase_6>
   0x08048be2 <+341>:	call   0x80495de <phase_defused>
   0x08048be7 <+346>:	mov    $0x0,%eax
   0x08048bec <+351>:	mov    -0x4(%ebp),%ebx
   0x08048bef <+354>:	leave  
---Type <return> to continue, or q <return> to quit---
   0x08048bf0 <+355>:	ret    
End of assembler dump.
(gdb) rt
0x08048b58	104	  return __printf_chk (__USE_FORTIFY_LEVEL - 1, __fmt, __va_arg_pack ());
Dump of assembler code for function main:
   0x08048a8d <+0>:	push   %ebp
   0x08048a8e <+1>:	mov    %esp,%ebp
   0x08048a90 <+3>:	push   %ebx
   0x08048a91 <+4>:	and    $0xfffffff0,%esp
   0x08048a94 <+7>:	sub    $0x10,%esp
   0x08048a97 <+10>:	mov    0x8(%ebp),%eax
   0x08048a9a <+13>:	mov    0xc(%ebp),%ebx
   0x08048a9d <+16>:	cmp    $0x1,%eax
   0x08048aa0 <+19>:	jne    0x8048aae <main+33>
   0x08048aa2 <+21>:	mov    0x804d7e4,%eax
   0x08048aa7 <+26>:	mov    %eax,0x804d80c
   0x08048aac <+31>:	jmp    0x8048b22 <main+149>
   0x08048aae <+33>:	cmp    $0x2,%eax
   0x08048ab1 <+36>:	jne    0x8048afc <main+111>
   0x08048ab3 <+38>:	movl   $0x804a360,0x4(%esp)
   0x08048abb <+46>:	mov    0x4(%ebx),%eax
   0x08048abe <+49>:	mov    %eax,(%esp)
   0x08048ac1 <+52>:	call   0x80488e0 <fopen@plt>
   0x08048ac6 <+57>:	mov    %eax,0x804d80c
   0x08048acb <+62>:	test   %eax,%eax
   0x08048acd <+64>:	jne    0x8048b22 <main+149>
   0x08048acf <+66>:	mov    0x4(%ebx),%eax
   0x08048ad2 <+69>:	mov    %eax,0xc(%esp)
   0x08048ad6 <+73>:	mov    (%ebx),%eax
   0x08048ad8 <+75>:	mov    %eax,0x8(%esp)
   0x08048adc <+79>:	movl   $0x804a362,0x4(%esp)
   0x08048ae4 <+87>:	movl   $0x1,(%esp)
   0x08048aeb <+94>:	call   0x8048900 <__printf_chk@plt>
   0x08048af0 <+99>:	movl   $0x8,(%esp)
   0x08048af7 <+106>:	call   0x8048890 <exit@plt>
   0x08048afc <+111>:	mov    (%ebx),%eax
   0x08048afe <+113>:	mov    %eax,0x8(%esp)
   0x08048b02 <+117>:	movl   $0x804a37f,0x4(%esp)
   0x08048b0a <+125>:	movl   $0x1,(%esp)
   0x08048b11 <+132>:	call   0x8048900 <__printf_chk@plt>
   0x08048b16 <+137>:	movl   $0x8,(%esp)
   0x08048b1d <+144>:	call   0x8048890 <exit@plt>
   0x08048b22 <+149>:	call   0x80491c6 <initialize_bomb>
   0x08048b27 <+154>:	movl   $0x804a3e4,(%esp)
---Type <return> to continue, or q <return> to quit---rt
   0x08048b2e <+161>:	call   0x8048850 <puts@plt>
   0x08048b33 <+166>:	movl   $0x804a420,(%esp)
   0x08048b3a <+173>:	call   0x8048850 <puts@plt>
   0x08048b3f <+178>:	call   0x80494e4 <read_line>
   0x08048b44 <+183>:	mov    %eax,(%esp)
   0x08048b47 <+186>:	call   0x8048c00 <phase_1>
   0x08048b4c <+191>:	call   0x80495de <phase_defused>
   0x08048b51 <+196>:	movl   $0x804a44c,(%esp)
=> 0x08048b58 <+203>:	call   0x8048850 <puts@plt>
   0x08048b5d <+208>:	call   0x80494e4 <read_line>
   0x08048b62 <+213>:	mov    %eax,(%esp)
   0x08048b65 <+216>:	call   0x8048c24 <phase_2>
   0x08048b6a <+221>:	call   0x80495de <phase_defused>
   0x08048b6f <+226>:	movl   $0x804a399,(%esp)
   0x08048b76 <+233>:	call   0x8048850 <puts@plt>
   0x08048b7b <+238>:	call   0x80494e4 <read_line>
   0x08048b80 <+243>:	mov    %eax,(%esp)
   0x08048b83 <+246>:	call   0x8048c7a <phase_3>
   0x08048b88 <+251>:	call   0x80495de <phase_defused>
   0x08048b8d <+256>:	movl   $0x804a3b7,(%esp)
   0x08048b94 <+263>:	call   0x8048850 <puts@plt>
   0x08048b99 <+268>:	call   0x80494e4 <read_line>
   0x08048b9e <+273>:	mov    %eax,(%esp)
   0x08048ba1 <+276>:	call   0x8048e29 <phase_4>
   0x08048ba6 <+281>:	call   0x80495de <phase_defused>
   0x08048bab <+286>:	movl   $0x804a478,(%esp)
   0x08048bb2 <+293>:	call   0x8048850 <puts@plt>
   0x08048bb7 <+298>:	call   0x80494e4 <read_line>
   0x08048bbc <+303>:	mov    %eax,(%esp)
   0x08048bbf <+306>:	call   0x8048e92 <phase_5>
   0x08048bc4 <+311>:	call   0x80495de <phase_defused>
   0x08048bc9 <+316>:	movl   $0x804a3c6,(%esp)
   0x08048bd0 <+323>:	call   0x8048850 <puts@plt>
   0x08048bd5 <+328>:	call   0x80494e4 <read_line>
   0x08048bda <+333>:	mov    %eax,(%esp)
   0x08048bdd <+336>:	call   0x8048f1c <phase_6>
   0x08048be2 <+341>:	call   0x80495de <phase_defused>
   0x08048be7 <+346>:	mov    $0x0,%eax
   0x08048bec <+351>:	mov    -0x4(%ebp),%ebx
   0x08048bef <+354>:	leave  
   0x08048bf0 <+355>:	ret    
---Type <return> to continue, or q <return> to quit---c[K
End of assembler dump.
(gdb) 
Phase 1 defused. How about the next one?
main (argc=2, argv=0xffffd6c4) at bomb.c:73
73	    input = read_line();
Dump of assembler code for function main:
   0x08048a8d <+0>:	push   %ebp
   0x08048a8e <+1>:	mov    %esp,%ebp
   0x08048a90 <+3>:	push   %ebx
   0x08048a91 <+4>:	and    $0xfffffff0,%esp
   0x08048a94 <+7>:	sub    $0x10,%esp
   0x08048a97 <+10>:	mov    0x8(%ebp),%eax
   0x08048a9a <+13>:	mov    0xc(%ebp),%ebx
   0x08048a9d <+16>:	cmp    $0x1,%eax
   0x08048aa0 <+19>:	jne    0x8048aae <main+33>
   0x08048aa2 <+21>:	mov    0x804d7e4,%eax
   0x08048aa7 <+26>:	mov    %eax,0x804d80c
   0x08048aac <+31>:	jmp    0x8048b22 <main+149>
   0x08048aae <+33>:	cmp    $0x2,%eax
   0x08048ab1 <+36>:	jne    0x8048afc <main+111>
   0x08048ab3 <+38>:	movl   $0x804a360,0x4(%esp)
   0x08048abb <+46>:	mov    0x4(%ebx),%eax
   0x08048abe <+49>:	mov    %eax,(%esp)
   0x08048ac1 <+52>:	call   0x80488e0 <fopen@plt>
   0x08048ac6 <+57>:	mov    %eax,0x804d80c
   0x08048acb <+62>:	test   %eax,%eax
   0x08048acd <+64>:	jne    0x8048b22 <main+149>
   0x08048acf <+66>:	mov    0x4(%ebx),%eax
   0x08048ad2 <+69>:	mov    %eax,0xc(%esp)
   0x08048ad6 <+73>:	mov    (%ebx),%eax
   0x08048ad8 <+75>:	mov    %eax,0x8(%esp)
   0x08048adc <+79>:	movl   $0x804a362,0x4(%esp)
   0x08048ae4 <+87>:	movl   $0x1,(%esp)
   0x08048aeb <+94>:	call   0x8048900 <__printf_chk@plt>
   0x08048af0 <+99>:	movl   $0x8,(%esp)
   0x08048af7 <+106>:	call   0x8048890 <exit@plt>
   0x08048afc <+111>:	mov    (%ebx),%eax
   0x08048afe <+113>:	mov    %eax,0x8(%esp)
   0x08048b02 <+117>:	movl   $0x804a37f,0x4(%esp)
   0x08048b0a <+125>:	movl   $0x1,(%esp)
   0x08048b11 <+132>:	call   0x8048900 <__printf_chk@plt>
   0x08048b16 <+137>:	movl   $0x8,(%esp)
   0x08048b1d <+144>:	call   0x8048890 <exit@plt>
   0x08048b22 <+149>:	call   0x80491c6 <initialize_bomb>
---Type <return> to continue, or q <return> to quit---
   0x08048b27 <+154>:	movl   $0x804a3e4,(%esp)
   0x08048b2e <+161>:	call   0x8048850 <puts@plt>
   0x08048b33 <+166>:	movl   $0x804a420,(%esp)
   0x08048b3a <+173>:	call   0x8048850 <puts@plt>
   0x08048b3f <+178>:	call   0x80494e4 <read_line>
   0x08048b44 <+183>:	mov    %eax,(%esp)
   0x08048b47 <+186>:	call   0x8048c00 <phase_1>
   0x08048b4c <+191>:	call   0x80495de <phase_defused>
   0x08048b51 <+196>:	movl   $0x804a44c,(%esp)
   0x08048b58 <+203>:	call   0x8048850 <puts@plt>
=> 0x08048b5d <+208>:	call   0x80494e4 <read_line>
   0x08048b62 <+213>:	mov    %eax,(%esp)
   0x08048b65 <+216>:	call   0x8048c24 <phase_2>
   0x08048b6a <+221>:	call   0x80495de <phase_defused>
   0x08048b6f <+226>:	movl   $0x804a399,(%esp)
   0x08048b76 <+233>:	call   0x8048850 <puts@plt>
   0x08048b7b <+238>:	call   0x80494e4 <read_line>
   0x08048b80 <+243>:	mov    %eax,(%esp)
   0x08048b83 <+246>:	call   0x8048c7a <phase_3>
   0x08048b88 <+251>:	call   0x80495de <phase_defused>
   0x08048b8d <+256>:	movl   $0x804a3b7,(%esp)
   0x08048b94 <+263>:	call   0x8048850 <puts@plt>
   0x08048b99 <+268>:	call   0x80494e4 <read_line>
   0x08048b9e <+273>:	mov    %eax,(%esp)
   0x08048ba1 <+276>:	call   0x8048e29 <phase_4>
   0x08048ba6 <+281>:	call   0x80495de <phase_defused>
   0x08048bab <+286>:	movl   $0x804a478,(%esp)
   0x08048bb2 <+293>:	call   0x8048850 <puts@plt>
   0x08048bb7 <+298>:	call   0x80494e4 <read_line>
   0x08048bbc <+303>:	mov    %eax,(%esp)
   0x08048bbf <+306>:	call   0x8048e92 <phase_5>
   0x08048bc4 <+311>:	call   0x80495de <phase_defused>
   0x08048bc9 <+316>:	movl   $0x804a3c6,(%esp)
   0x08048bd0 <+323>:	call   0x8048850 <puts@plt>
   0x08048bd5 <+328>:	call   0x80494e4 <read_line>
   0x08048bda <+333>:	mov    %eax,(%esp)
   0x08048bdd <+336>:	call   0x8048f1c <phase_6>
   0x08048be2 <+341>:	call   0x80495de <phase_defused>
   0x08048be7 <+346>:	mov    $0x0,%eax
   0x08048bec <+351>:	mov    -0x4(%ebp),%ebx
   0x08048bef <+354>:	leave  
---Type <return> to continue, or q <return> to quit---
   0x08048bf0 <+355>:	ret    
End of assembler dump.
(gdb) b[Kb phase_2
Breakpoint 3 at 0x8048c24
(gdb) r d[KDefuse_Commands.txt [K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kq
A debugging session is active.

	Inferior 1 [process 11449] will be killed.

Quit anyway? (y or n) y
]0;ylu236@ylu236: ~/fall2015/cs485g/p1/bomb92ylu236@ylu236:~/fall2015/cs485g/p1/bomb92$ g[Kls -l
total 76
-rwxrwxr-x 1 ylu236 ylu236 28104 Oct  1 09:01 [0m[01;32mbomb[0m
-rw-r--r-- 1 ylu236 ylu236  3545 Oct  1 09:01 bomb.c
-rw-rw-r-- 1 ylu236 ylu236    42 Oct  1 09:27 Defuse_Commands.txt
-rw-rw-r-- 1 ylu236 ylu236 36864 Oct  1 09:28 Luo_p1.txt
-rw-rw-r-- 1 ylu236 ylu236    56 Oct  1 09:01 README
]0;ylu236@ylu236: ~/fall2015/cs485g/p1/bomb92ylu236@ylu236:~/fall2015/cs485g/p1/bomb92$ gdb bomb 
GNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1
Copyright (C) 2014 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from bomb...done.
(gdb) b phase_2
Breakpoint 1 at 0x8048c24
(gdb) p[Kb explode bo[K[K[K_bomb
Breakpoint 2 at 0x8049455
(gdb) r Defuse_Commands.txt 
Starting program: /home/ylu236/fall2015/cs485g/p1/bomb92/bomb Defuse_Commands.txt
Welcome to my fiendish little bomb. You have 6 phases with
which to blow yourself up. Have a nice day!
Phase 1 defused. How about the next one?
1 2 4 8 12 20

Breakpoint 1, 0x08048c24 in phase_2 ()
(gdb) define rt
Type commands for definition of "rt".
End with a line saying just "end".
>ni
>disas
>end
(gdb) rt[K[Kr[Kr Defuse_Commands.txt 
The program being debugged has been started already.
Start it from the beginning? (y or n) n
Program not restarted.
(gdb) rt
0x08048c25 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
=> 0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt[K[Krt[K[Ki r
eax            0x804d870	134535280
ecx            0xe	14
edx            0x2	2
ebx            0xffffd6c4	-10556
esp            0xffffd608	0xffffd608
ebp            0xffffd628	0xffffd628
esi            0x0	0
edi            0x0	0
eip            0x8048c25	0x8048c25 <phase_2+1>
eflags         0x286	[ PF SF IF ]
cs             0x23	35
ss             0x2b	43
ds             0x2b	43
es             0x2b	43
fs             0x0	0
gs             0x63	99
(gdb) rt
0x08048c26 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
=> 0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c29 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
=> 0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c2d in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
=> 0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c31 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
=> 0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c35 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
=> 0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c38 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
=> 0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c3d in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
=> 0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) i r
eax            0x6	6
ecx            0x0	0
edx            0xffffd5fc	-10756
ebx            0xffffd6c4	-10556
esp            0xffffd5d0	0xffffd5d0
ebp            0xffffd628	0xffffd628
esi            0x0	0
edi            0x0	0
eip            0x8048c3d	0x8048c3d <phase_2+25>
eflags         0x286	[ PF SF IF ]
cs             0x23	35
ss             0x2b	43
ds             0x2b	43
es             0x2b	43
fs             0x0	0
gs             0x63	99
(gdb) i r
eax            0x6	6
ecx            0x0	0
edx            0xffffd5fc	-10756
ebx            0xffffd6c4	-10556
esp            0xffffd5d0	0xffffd5d0
ebp            0xffffd628	0xffffd628
esi            0x0	0
edi            0x0	0
eip            0x8048c3d	0x8048c3d <phase_2+25>
eflags         0x286	[ PF SF IF ]
cs             0x23	35
ss             0x2b	43
ds             0x2b	43
es             0x2b	43
fs             0x0	0
gs             0x63	99
(gdb) i r
eax            0x6	6
ecx            0x0	0
edx            0xffffd5fc	-10756
ebx            0xffffd6c4	-10556
esp            0xffffd5d0	0xffffd5d0
ebp            0xffffd628	0xffffd628
esi            0x0	0
edi            0x0	0
eip            0x8048c3d	0x8048c3d <phase_2+25>
eflags         0x286	[ PF SF IF ]
cs             0x23	35
ss             0x2b	43
ds             0x2b	43
es             0x2b	43
fs             0x0	0
gs             0x63	99
(gdb) d[Kr[Kdisas
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
=> 0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) i r
eax            0x6	6
ecx            0x0	0
edx            0xffffd5fc	-10756
ebx            0xffffd6c4	-10556
esp            0xffffd5d0	0xffffd5d0
ebp            0xffffd628	0xffffd628
esi            0x0	0
edi            0x0	0
eip            0x8048c3d	0x8048c3d <phase_2+25>
eflags         0x286	[ PF SF IF ]
cs             0x23	35
ss             0x2b	43
ds             0x2b	43
es             0x2b	43
fs             0x0	0
gs             0x63	99
(gdb) x/s 0xffffd5e8
0xffffd5e8:	"\001"
(gdb) rt
0x08048c42 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
=> 0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c4b in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
=> 0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) i r
eax            0x6	6
ecx            0x0	0
edx            0xffffd5fc	-10756
ebx            0xffffd6c4	-10556
esp            0xffffd5d0	0xffffd5d0
ebp            0xffffd628	0xffffd628
esi            0x0	0
edi            0x0	0
eip            0x8048c4b	0x8048c4b <phase_2+39>
eflags         0x202	[ IF ]
cs             0x23	35
ss             0x2b	43
ds             0x2b	43
es             0x2b	43
fs             0x0	0
gs             0x63	99
(gdb) x/s 0xffffd5ec
0xffffd5ec:	"\002"
(gdb) q
A debugging session is active.

	Inferior 1 [process 11461] will be killed.

Quit anyway? (y or n) y
]0;ylu236@ylu236: ~/fall2015/cs485g/p1/bomb92ylu236@ylu236:~/fall2015/cs485g/p1/bomb92$ gdb bomb 
GNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1
Copyright (C) 2014 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from bomb...done.
(gdb) b phase_2
Breakpoint 1 at 0x8048c24
(gdb) b explode [K_bomb
Breakpoint 2 at 0x8049455
(gdb) define rt
Type commands for definition of "rt".
End with a line saying just "end".
>ni
>disas
>end
(gdb) r Defuse_Commands.txt 
Starting program: /home/ylu236/fall2015/cs485g/p1/bomb92/bomb Defuse_Commands.txt
Welcome to my fiendish little bomb. You have 6 phases with
which to blow yourself up. Have a nice day!
Phase 1 defused. How about the next one?
0 1 2 3 4 5  

Breakpoint 1, 0x08048c24 in phase_2 ()
(gdb) rt
0x08048c25 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
=> 0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c26 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
=> 0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c29 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
=> 0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c2d in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
=> 0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c31 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
=> 0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c35 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
=> 0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c38 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
=> 0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c3d in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
=> 0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) i frame
Stack level 0, frame at 0xffffd610:
 eip = 0x8048c3d in phase_2; saved eip = 0x8048b6a
 called by frame at 0xffffd630
 Arglist at 0xffffd5d4, args: 
 Locals at 0xffffd5d4, Previous frame's sp is 0xffffd610
 Saved registers:
  ebx at 0xffffd604, esi at 0xffffd608, eip at 0xffffd60c
(gdb) i local
No symbol table info available.
(gdb) i locals
No symbol table info available.
(gdb) i r
eax            0x6	6
ecx            0x0	0
edx            0xffffd5fc	-10756
ebx            0xffffd6c4	-10556
esp            0xffffd5d0	0xffffd5d0
ebp            0xffffd628	0xffffd628
esi            0x0	0
edi            0x0	0
eip            0x8048c3d	0x8048c3d <phase_2+25>
eflags         0x286	[ PF SF IF ]
cs             0x23	35
ss             0x2b	43
ds             0x2b	43
es             0x2b	43
fs             0x0	0
gs             0x63	99
(gdb) x/s 0xffffd5[K5e8
0xffffd5e8:	""
(gdb) rt
0x08048c42 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
=> 0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt[K[Kx/s 0x8048c4b
0x8048c4b <phase_2+39>:	"\350\005\b"
(gdb) x/s *(char**)($esp +18)
0x0:	<error: Cannot access memory at address 0x0>
(gdb) x/s *(char**)($esp +18)[C[C[1P+18)
0x0:	<error: Cannot access memory at address 0x0>
(gdb) x/s *(char**)($esp+18)[K[K[K[K)
0x804d870 <input_strings+80>:	"0 1 2 3 4 5"
(gdb) x/s *(char**)($esp)+)4)
0xffffd5e8:	""
(gdb) rt
0x08048c44 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
=> 0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rtx/s *(char**)($esp+4)[1P)1)8)
0x0:	<error: Cannot access memory at address 0x0>
(gdb) x/s *(char**)($esp+18)[C[1P)c)
Invalid number "1c".
(gdb) x/s *(char**)($esp+1c)01c)x1c)
0x1:	<error: Cannot access memory at address 0x1>
(gdb) x/s *(char**)($esp+0x1c)[1P)[1P)[1P)[1P)4)
0xffffd5e8:	""
(gdb) x/s *(char**)($esp+4)[1P)8)
0xf7fbcc20 <_IO_2_1_stdin_>:	"\210\"\255\373\fp\375\367\fp\375", <incomplete sequence \367>
(gdb) x/s *(char**)($esp+8)[1P)1)6)
0x0:	<error: Cannot access memory at address 0x0>
(gdb) x/s *(char**)($esp+16)[1P)2)
0xffffd6c4:	"\362\327\377\377\036\330\377\377"
(gdb) x/s *(char**)($esp+12)[C[1P)6)
0x0:	<error: Cannot access memory at address 0x0>
(gdb) x/s *(char**)($esp+16)[1P)8)[1P)[1P)[C[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Krt
0x08048c49 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
=> 0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt[K[Ki r
eax            0x6	6
ecx            0x0	0
edx            0xffffd5fc	-10756
ebx            0xffffd6c4	-10556
esp            0xffffd5d0	0xffffd5d0
ebp            0xffffd628	0xffffd628
esi            0x0	0
edi            0x0	0
eip            0x8048c49	0x8048c49 <phase_2+37>
eflags         0x246	[ PF ZF IF ]
cs             0x23	35
ss             0x2b	43
ds             0x2b	43
es             0x2b	43
fs             0x0	0
gs             0x63	99
(gdb) rt
0x08048c6a in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
=> 0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) i r
eax            0x6	6
ecx            0x0	0
edx            0xffffd5fc	-10756
ebx            0xffffd6c4	-10556
esp            0xffffd5d0	0xffffd5d0
ebp            0xffffd628	0xffffd628
esi            0x0	0
edi            0x0	0
eip            0x8048c6a	0x8048c6a <phase_2+70>
eflags         0x246	[ PF ZF IF ]
cs             0x23	35
ss             0x2b	43
ds             0x2b	43
es             0x2b	43
fs             0x0	0
gs             0x63	99
(gdb) rt
0x08048c6e in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
=> 0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c72 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
=> 0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c52 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
=> 0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) i r
eax            0x6	6
ecx            0x0	0
edx            0xffffd5fc	-10756
ebx            0xffffd5f0	-10768
esp            0xffffd5d0	0xffffd5d0
ebp            0xffffd628	0xffffd628
esi            0xffffd600	-10752
edi            0x0	0
eip            0x8048c52	0x8048c52 <phase_2+46>
eflags         0x246	[ PF ZF IF ]
cs             0x23	35
ss             0x2b	43
ds             0x2b	43
es             0x2b	43
fs             0x0	0
gs             0x63	99
(gdb) rt
0x08048c55 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
=> 0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) i r
eax            0x0	0
ecx            0x0	0
edx            0xffffd5fc	-10756
ebx            0xffffd5f0	-10768
esp            0xffffd5d0	0xffffd5d0
ebp            0xffffd628	0xffffd628
esi            0xffffd600	-10752
edi            0x0	0
eip            0x8048c55	0x8048c55 <phase_2+49>
eflags         0x246	[ PF ZF IF ]
cs             0x23	35
ss             0x2b	43
ds             0x2b	43
es             0x2b	43
fs             0x0	0
gs             0x63	99
(gdb) s/x[K[K[Kx.[K/s 0xffffd5cc
0xffffd5cc:	"=\214\004\bp\330\004\b\350\325\377\377 \314\373\367\304\326\377\377"
(gdb) print *(char**)([K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K0/s[K[K[Ks[Kx/w 0xffffd5cc
0xffffd5cc:	U"\x8048c3d\x804d870\xffffd5e8\xf7fbcc20\xffffd6c4"
(gdb) print *(int*) 0xffffd5cc
$1 = 134515773
(gdb) rt
0x08048c58 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
=> 0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) i r
eax            0x1	1
ecx            0x0	0
edx            0xffffd5fc	-10756
ebx            0xffffd5f0	-10768
esp            0xffffd5d0	0xffffd5d0
ebp            0xffffd628	0xffffd628
esi            0xffffd600	-10752
edi            0x0	0
eip            0x8048c58	0x8048c58 <phase_2+52>
eflags         0x202	[ IF ]
cs             0x23	35
ss             0x2b	43
ds             0x2b	43
es             0x2b	43
fs             0x0	0
gs             0x63	99
(gdb) x/s 0xffffd5f0
0xffffd5f0:	"\002"
(gdb) x/s[K[K[Kprint *(int*) 0xffffd5f0
$2 = 2
(gdb) rt
0x08048c5a in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
=> 0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c5c in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
=> 0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) q
A debugging session is active.

	Inferior 1 [process 11468] will be killed.

Quit anyway? (y or n) y
]0;ylu236@ylu236: ~/fall2015/cs485g/p1/bomb92ylu236@ylu236:~/fall2015/cs485g/p1/bomb92$ gdb [K[K[K[Kgdb bomb 
GNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1
Copyright (C) 2014 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from bomb...done.
(gdb) b phae[Kse_2
Breakpoint 1 at 0x8048c24
(gdb) b explode_bomb
Breakpoint 2 at 0x8049455
(gdb) r[Kdefine rt
Type commands for definition of "rt".
End with a line saying just "end".
>ni
>disas
>end
(gdb) r Defuse_Commands.txt 
Starting program: /home/ylu236/fall2015/cs485g/p1/bomb92/bomb Defuse_Commands.txt
Welcome to my fiendish little bomb. You have 6 phases with
which to blow yourself up. Have a nice day!
Phase 1 defused. How about the next one?
0 1 2 4 6 8 10

Breakpoint 1, 0x08048c24 in phase_2 ()
(gdb) rt
0x08048c25 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
=> 0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c26 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
=> 0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c29 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
=> 0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c2d in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
=> 0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c31 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
=> 0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c35 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
=> 0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c38 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
=> 0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c3d in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
=> 0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c42 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
=> 0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c44 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
=> 0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c49 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
=> 0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c4b in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
=> 0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) q
A debugging session is active.

	Inferior 1 [process 11483] will be killed.

Quit anyway? (y or n) y
]0;ylu236@ylu236: ~/fall2015/cs485g/p1/bomb92ylu236@ylu236:~/fall2015/cs485g/p1/bomb92$ gdb bomb 
GNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1
Copyright (C) 2014 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from bomb...done.
(gdb) g phas[K[K[K[K[K[Kb phase_2
Breakpoint 1 at 0x8048c24
(gdb) b explode_bomb
Breakpoint 2 at 0x8049455
(gdb) define rt
Type commands for definition of "rt".
End with a line saying just "end".
>ni
>disas
>end
(gdb) r Defuse_Commands.txt 
Starting program: /home/ylu236/fall2015/cs485g/p1/bomb92/bomb Defuse_Commands.txt
Welcome to my fiendish little bomb. You have 6 phases with
which to blow yourself up. Have a nice day!
Phase 1 defused. How about the next one?
0 1 2 3 4 5  

Breakpoint 1, 0x08048c24 in phase_2 ()
(gdb) rt
0x08048c25 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
=> 0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c26 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
=> 0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c29 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
=> 0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c2d in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
=> 0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c31 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
=> 0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c35 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
=> 0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c38 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
=> 0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c3d in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
=> 0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c42 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
=> 0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c44 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
=> 0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c49 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
=> 0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c6a in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
=> 0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c6e in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
=> 0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c72 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
=> 0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c52 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
=> 0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c55 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
=> 0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c58 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
=> 0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) i r
eax            0x1	1
ecx            0x0	0
edx            0xffffd5fc	-10756
ebx            0xffffd5f0	-10768
esp            0xffffd5d0	0xffffd5d0
ebp            0xffffd628	0xffffd628
esi            0xffffd600	-10752
edi            0x0	0
eip            0x8048c58	0x8048c58 <phase_2+52>
eflags         0x202	[ IF ]
cs             0x23	35
ss             0x2b	43
ds             0x2b	43
es             0x2b	43
fs             0x0	0
gs             0x63	99
(gdb) rt
0x08048c5a in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
=> 0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) i r
eax            0x1	1
ecx            0x0	0
edx            0xffffd5fc	-10756
ebx            0xffffd5f0	-10768
esp            0xffffd5d0	0xffffd5d0
ebp            0xffffd628	0xffffd628
esi            0xffffd600	-10752
edi            0x0	0
eip            0x8048c5a	0x8048c5a <phase_2+54>
eflags         0x202	[ IF ]
cs             0x23	35
ss             0x2b	43
ds             0x2b	43
es             0x2b	43
fs             0x0	0
gs             0x63	99
(gdb) x/s[K[K[Kprint *(int*) 0xffffd5f0
$1 = 2
(gdb) print *(int*) 0xffffd5f0[K[K[K5cc
$2 = 134515773
(gdb) s/[K[Kx/s *ch[K[K*[K(char**)($ebx-4)
0x1:	<error: Cannot access memory at address 0x1>
(gdb) x/s[Kw 0xffffd5cc
0xffffd5cc:	U"\x8048c3d\x804d870\xffffd5e8\xf7fbcc20\xffffd6c4"
(gdb) rt
0x08048c5c in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
=> 0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) q
A debugging session is active.

	Inferior 1 [process 11489] will be killed.

Quit anyway? (y or n) y
]0;ylu236@ylu236: ~/fall2015/cs485g/p1/bomb92ylu236@ylu236:~/fall2015/cs485g/p1/bomb92$ gdb bomb 
GNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1
Copyright (C) 2014 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from bomb...done.
(gdb) b phase_2
Breakpoint 1 at 0x8048c24
(gdb) define rt
Type commands for definition of "rt".
End with a line saying just "end".
>ni
>disas
>ed[Knd
(gdb) r d[KDefuse_Commands.txt 
Starting program: /home/ylu236/fall2015/cs485g/p1/bomb92/bomb Defuse_Commands.txt
Welcome to my fiendish little bomb. You have 6 phases with
which to blow yourself up. Have a nice day!
Phase 1 defused. How about the next one?
0 1 1 2 3 5  

Breakpoint 1, 0x08048c24 in phase_2 ()
(gdb) rt
0x08048c25 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
=> 0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c26 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
=> 0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c29 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
=> 0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c2d in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
=> 0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c31 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
=> 0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c35 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
=> 0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c38 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
=> 0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c3d in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
=> 0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c42 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
=> 0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c44 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
=> 0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c49 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
=> 0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c6a in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
=> 0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c6e in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
=> 0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c72 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
=> 0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c52 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
=> 0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c55 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
=> 0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c58 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
=> 0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c5a in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
=> 0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c61 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
=> 0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c64 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
=> 0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c66 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
=> 0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c52 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
=> 0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c55 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
=> 0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c58 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
=> 0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) i r
eax            0x2	2
ecx            0x0	0
edx            0xffffd5fc	-10756
ebx            0xffffd5f4	-10764
esp            0xffffd5d0	0xffffd5d0
ebp            0xffffd628	0xffffd628
esi            0xffffd600	-10752
edi            0x0	0
eip            0x8048c58	0x8048c58 <phase_2+52>
eflags         0x202	[ IF ]
cs             0x23	35
ss             0x2b	43
ds             0x2b	43
es             0x2b	43
fs             0x0	0
gs             0x63	99
(gdb) rt
0x08048c5a in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
=> 0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c61 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
=> 0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c64 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
=> 0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c66 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
=> 0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c52 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
=> 0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c55 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
=> 0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c58 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
=> 0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c5a in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
=> 0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt[K[Ki r
eax            0x3	3
ecx            0x0	0
edx            0xffffd5fc	-10756
ebx            0xffffd5f8	-10760
esp            0xffffd5d0	0xffffd5d0
ebp            0xffffd628	0xffffd628
esi            0xffffd600	-10752
edi            0x0	0
eip            0x8048c5a	0x8048c5a <phase_2+54>
eflags         0x246	[ PF ZF IF ]
cs             0x23	35
ss             0x2b	43
ds             0x2b	43
es             0x2b	43
fs             0x0	0
gs             0x63	99
(gdb) x/[K[Kx/s 0xffffd5f0[K[Kd0
0xffffd5d0:	"p\330\004\b\350\325\377\377 \314\373\367\304\326\377\377"
(gdb) print i[K*(int*) 0xffffd5d0
$1 = 134535280
(gdb) rt
0x08048c61 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
=> 0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c64 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
=> 0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c66 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
=> 0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c52 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
=> 0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c55 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
=> 0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c58 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
=> 0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c5a in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
=> 0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) i r
eax            0x5	5
ecx            0x0	0
edx            0xffffd5fc	-10756
ebx            0xffffd5fc	-10756
esp            0xffffd5d0	0xffffd5d0
ebp            0xffffd628	0xffffd628
esi            0xffffd600	-10752
edi            0x0	0
eip            0x8048c5a	0x8048c5a <phase_2+54>
eflags         0x246	[ PF ZF IF ]
cs             0x23	35
ss             0x2b	43
ds             0x2b	43
es             0x2b	43
fs             0x0	0
gs             0x63	99
(gdb) rt
0x08048c61 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
=> 0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c64 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
=> 0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c66 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
=> 0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c68 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
=> 0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c74 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
=> 0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c77 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
=> 0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c78 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
=> 0x08048c78 <+84>:	pop    %esi
   0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
0x08048c79 in phase_2 ()
Dump of assembler code for function phase_2:
   0x08048c24 <+0>:	push   %esi
   0x08048c25 <+1>:	push   %ebx
   0x08048c26 <+2>:	sub    $0x34,%esp
   0x08048c29 <+5>:	lea    0x18(%esp),%eax
   0x08048c2d <+9>:	mov    %eax,0x4(%esp)
   0x08048c31 <+13>:	mov    0x40(%esp),%eax
   0x08048c35 <+17>:	mov    %eax,(%esp)
   0x08048c38 <+20>:	call   0x8049494 <read_six_numbers>
   0x08048c3d <+25>:	cmpl   $0x0,0x18(%esp)
   0x08048c42 <+30>:	jne    0x8048c4b <phase_2+39>
   0x08048c44 <+32>:	cmpl   $0x1,0x1c(%esp)
   0x08048c49 <+37>:	je     0x8048c6a <phase_2+70>
   0x08048c4b <+39>:	call   0x8049455 <explode_bomb>
   0x08048c50 <+44>:	jmp    0x8048c6a <phase_2+70>
   0x08048c52 <+46>:	mov    -0x8(%ebx),%eax
   0x08048c55 <+49>:	add    -0x4(%ebx),%eax
   0x08048c58 <+52>:	cmp    %eax,(%ebx)
   0x08048c5a <+54>:	je     0x8048c61 <phase_2+61>
   0x08048c5c <+56>:	call   0x8049455 <explode_bomb>
   0x08048c61 <+61>:	add    $0x4,%ebx
   0x08048c64 <+64>:	cmp    %esi,%ebx
   0x08048c66 <+66>:	jne    0x8048c52 <phase_2+46>
   0x08048c68 <+68>:	jmp    0x8048c74 <phase_2+80>
   0x08048c6a <+70>:	lea    0x20(%esp),%ebx
   0x08048c6e <+74>:	lea    0x30(%esp),%esi
   0x08048c72 <+78>:	jmp    0x8048c52 <phase_2+46>
   0x08048c74 <+80>:	add    $0x34,%esp
   0x08048c77 <+83>:	pop    %ebx
   0x08048c78 <+84>:	pop    %esi
=> 0x08048c79 <+85>:	ret    
End of assembler dump.
(gdb) rt
main (argc=2, argv=0xffffd6c4) at bomb.c:75
75	    phase_defused();
Dump of assembler code for function main:
   0x08048a8d <+0>:	push   %ebp
   0x08048a8e <+1>:	mov    %esp,%ebp
   0x08048a90 <+3>:	push   %ebx
   0x08048a91 <+4>:	and    $0xfffffff0,%esp
   0x08048a94 <+7>:	sub    $0x10,%esp
   0x08048a97 <+10>:	mov    0x8(%ebp),%eax
   0x08048a9a <+13>:	mov    0xc(%ebp),%ebx
   0x08048a9d <+16>:	cmp    $0x1,%eax
   0x08048aa0 <+19>:	jne    0x8048aae <main+33>
   0x08048aa2 <+21>:	mov    0x804d7e4,%eax
   0x08048aa7 <+26>:	mov    %eax,0x804d80c
   0x08048aac <+31>:	jmp    0x8048b22 <main+149>
   0x08048aae <+33>:	cmp    $0x2,%eax
   0x08048ab1 <+36>:	jne    0x8048afc <main+111>
   0x08048ab3 <+38>:	movl   $0x804a360,0x4(%esp)
   0x08048abb <+46>:	mov    0x4(%ebx),%eax
   0x08048abe <+49>:	mov    %eax,(%esp)
   0x08048ac1 <+52>:	call   0x80488e0 <fopen@plt>
   0x08048ac6 <+57>:	mov    %eax,0x804d80c
   0x08048acb <+62>:	test   %eax,%eax
   0x08048acd <+64>:	jne    0x8048b22 <main+149>
   0x08048acf <+66>:	mov    0x4(%ebx),%eax
   0x08048ad2 <+69>:	mov    %eax,0xc(%esp)
   0x08048ad6 <+73>:	mov    (%ebx),%eax
   0x08048ad8 <+75>:	mov    %eax,0x8(%esp)
   0x08048adc <+79>:	movl   $0x804a362,0x4(%esp)
   0x08048ae4 <+87>:	movl   $0x1,(%esp)
   0x08048aeb <+94>:	call   0x8048900 <__printf_chk@plt>
   0x08048af0 <+99>:	movl   $0x8,(%esp)
   0x08048af7 <+106>:	call   0x8048890 <exit@plt>
   0x08048afc <+111>:	mov    (%ebx),%eax
   0x08048afe <+113>:	mov    %eax,0x8(%esp)
   0x08048b02 <+117>:	movl   $0x804a37f,0x4(%esp)
   0x08048b0a <+125>:	movl   $0x1,(%esp)
   0x08048b11 <+132>:	call   0x8048900 <__printf_chk@plt>
   0x08048b16 <+137>:	movl   $0x8,(%esp)
   0x08048b1d <+144>:	call   0x8048890 <exit@plt>
   0x08048b22 <+149>:	call   0x80491c6 <initialize_bomb>
---Type <return> to continue, or q <return> to quit---
   0x08048b27 <+154>:	movl   $0x804a3e4,(%esp)
   0x08048b2e <+161>:	call   0x8048850 <puts@plt>
   0x08048b33 <+166>:	movl   $0x804a420,(%esp)
   0x08048b3a <+173>:	call   0x8048850 <puts@plt>
   0x08048b3f <+178>:	call   0x80494e4 <read_line>
   0x08048b44 <+183>:	mov    %eax,(%esp)
   0x08048b47 <+186>:	call   0x8048c00 <phase_1>
   0x08048b4c <+191>:	call   0x80495de <phase_defused>
   0x08048b51 <+196>:	movl   $0x804a44c,(%esp)
   0x08048b58 <+203>:	call   0x8048850 <puts@plt>
   0x08048b5d <+208>:	call   0x80494e4 <read_line>
   0x08048b62 <+213>:	mov    %eax,(%esp)
   0x08048b65 <+216>:	call   0x8048c24 <phase_2>
=> 0x08048b6a <+221>:	call   0x80495de <phase_defused>
   0x08048b6f <+226>:	movl   $0x804a399,(%esp)
   0x08048b76 <+233>:	call   0x8048850 <puts@plt>
   0x08048b7b <+238>:	call   0x80494e4 <read_line>
   0x08048b80 <+243>:	mov    %eax,(%esp)
   0x08048b83 <+246>:	call   0x8048c7a <phase_3>
   0x08048b88 <+251>:	call   0x80495de <phase_defused>
   0x08048b8d <+256>:	movl   $0x804a3b7,(%esp)
   0x08048b94 <+263>:	call   0x8048850 <puts@plt>
   0x08048b99 <+268>:	call   0x80494e4 <read_line>
   0x08048b9e <+273>:	mov    %eax,(%esp)
   0x08048ba1 <+276>:	call   0x8048e29 <phase_4>
   0x08048ba6 <+281>:	call   0x80495de <phase_defused>
   0x08048bab <+286>:	movl   $0x804a478,(%esp)
   0x08048bb2 <+293>:	call   0x8048850 <puts@plt>
   0x08048bb7 <+298>:	call   0x80494e4 <read_line>
   0x08048bbc <+303>:	mov    %eax,(%esp)
   0x08048bbf <+306>:	call   0x8048e92 <phase_5>
   0x08048bc4 <+311>:	call   0x80495de <phase_defused>
   0x08048bc9 <+316>:	movl   $0x804a3c6,(%esp)
   0x08048bd0 <+323>:	call   0x8048850 <puts@plt>
   0x08048bd5 <+328>:	call   0x80494e4 <read_line>
   0x08048bda <+333>:	mov    %eax,(%esp)
   0x08048bdd <+336>:	call   0x8048f1c <phase_6>
   0x08048be2 <+341>:	call   0x80495de <phase_defused>
   0x08048be7 <+346>:	mov    $0x0,%eax
   0x08048bec <+351>:	mov    -0x4(%ebp),%ebx
   0x08048bef <+354>:	leave  
---Type <return> to continue, or q <return> to quit---
   0x08048bf0 <+355>:	ret    
End of assembler dump.
(gdb) 
printf (__fmt=<optimized out>) at /usr/include/bits/stdio2.h:104
104	  return __printf_chk (__USE_FORTIFY_LEVEL - 1, __fmt, __va_arg_pack ());
Dump of assembler code for function main:
   0x08048a8d <+0>:	push   %ebp
   0x08048a8e <+1>:	mov    %esp,%ebp
   0x08048a90 <+3>:	push   %ebx
   0x08048a91 <+4>:	and    $0xfffffff0,%esp
   0x08048a94 <+7>:	sub    $0x10,%esp
   0x08048a97 <+10>:	mov    0x8(%ebp),%eax
   0x08048a9a <+13>:	mov    0xc(%ebp),%ebx
   0x08048a9d <+16>:	cmp    $0x1,%eax
   0x08048aa0 <+19>:	jne    0x8048aae <main+33>
   0x08048aa2 <+21>:	mov    0x804d7e4,%eax
   0x08048aa7 <+26>:	mov    %eax,0x804d80c
   0x08048aac <+31>:	jmp    0x8048b22 <main+149>
   0x08048aae <+33>:	cmp    $0x2,%eax
   0x08048ab1 <+36>:	jne    0x8048afc <main+111>
   0x08048ab3 <+38>:	movl   $0x804a360,0x4(%esp)
   0x08048abb <+46>:	mov    0x4(%ebx),%eax
   0x08048abe <+49>:	mov    %eax,(%esp)
   0x08048ac1 <+52>:	call   0x80488e0 <fopen@plt>
   0x08048ac6 <+57>:	mov    %eax,0x804d80c
   0x08048acb <+62>:	test   %eax,%eax
   0x08048acd <+64>:	jne    0x8048b22 <main+149>
   0x08048acf <+66>:	mov    0x4(%ebx),%eax
   0x08048ad2 <+69>:	mov    %eax,0xc(%esp)
   0x08048ad6 <+73>:	mov    (%ebx),%eax
   0x08048ad8 <+75>:	mov    %eax,0x8(%esp)
   0x08048adc <+79>:	movl   $0x804a362,0x4(%esp)
   0x08048ae4 <+87>:	movl   $0x1,(%esp)
   0x08048aeb <+94>:	call   0x8048900 <__printf_chk@plt>
   0x08048af0 <+99>:	movl   $0x8,(%esp)
   0x08048af7 <+106>:	call   0x8048890 <exit@plt>
   0x08048afc <+111>:	mov    (%ebx),%eax
   0x08048afe <+113>:	mov    %eax,0x8(%esp)
   0x08048b02 <+117>:	movl   $0x804a37f,0x4(%esp)
   0x08048b0a <+125>:	movl   $0x1,(%esp)
   0x08048b11 <+132>:	call   0x8048900 <__printf_chk@plt>
   0x08048b16 <+137>:	movl   $0x8,(%esp)
   0x08048b1d <+144>:	call   0x8048890 <exit@plt>
   0x08048b22 <+149>:	call   0x80491c6 <initialize_bomb>
---Type <return> to continue, or q <return> to quit---
   0x08048b27 <+154>:	movl   $0x804a3e4,(%esp)
   0x08048b2e <+161>:	call   0x8048850 <puts@plt>
   0x08048b33 <+166>:	movl   $0x804a420,(%esp)
   0x08048b3a <+173>:	call   0x8048850 <puts@plt>
   0x08048b3f <+178>:	call   0x80494e4 <read_line>
   0x08048b44 <+183>:	mov    %eax,(%esp)
   0x08048b47 <+186>:	call   0x8048c00 <phase_1>
   0x08048b4c <+191>:	call   0x80495de <phase_defused>
   0x08048b51 <+196>:	movl   $0x804a44c,(%esp)
   0x08048b58 <+203>:	call   0x8048850 <puts@plt>
   0x08048b5d <+208>:	call   0x80494e4 <read_line>
   0x08048b62 <+213>:	mov    %eax,(%esp)
   0x08048b65 <+216>:	call   0x8048c24 <phase_2>
   0x08048b6a <+221>:	call   0x80495de <phase_defused>
=> 0x08048b6f <+226>:	movl   $0x804a399,(%esp)
   0x08048b76 <+233>:	call   0x8048850 <puts@plt>
   0x08048b7b <+238>:	call   0x80494e4 <read_line>
   0x08048b80 <+243>:	mov    %eax,(%esp)
   0x08048b83 <+246>:	call   0x8048c7a <phase_3>
   0x08048b88 <+251>:	call   0x80495de <phase_defused>
   0x08048b8d <+256>:	movl   $0x804a3b7,(%esp)
   0x08048b94 <+263>:	call   0x8048850 <puts@plt>
   0x08048b99 <+268>:	call   0x80494e4 <read_line>
   0x08048b9e <+273>:	mov    %eax,(%esp)
   0x08048ba1 <+276>:	call   0x8048e29 <phase_4>
   0x08048ba6 <+281>:	call   0x80495de <phase_defused>
   0x08048bab <+286>:	movl   $0x804a478,(%esp)
   0x08048bb2 <+293>:	call   0x8048850 <puts@plt>
   0x08048bb7 <+298>:	call   0x80494e4 <read_line>
   0x08048bbc <+303>:	mov    %eax,(%esp)
   0x08048bbf <+306>:	call   0x8048e92 <phase_5>
   0x08048bc4 <+311>:	call   0x80495de <phase_defused>
   0x08048bc9 <+316>:	movl   $0x804a3c6,(%esp)
   0x08048bd0 <+323>:	call   0x8048850 <puts@plt>
   0x08048bd5 <+328>:	call   0x80494e4 <read_line>
   0x08048bda <+333>:	mov    %eax,(%esp)
   0x08048bdd <+336>:	call   0x8048f1c <phase_6>
   0x08048be2 <+341>:	call   0x80495de <phase_defused>
   0x08048be7 <+346>:	mov    $0x0,%eax
   0x08048bec <+351>:	mov    -0x4(%ebp),%ebx
   0x08048bef <+354>:	leave  
---Type <return> to continue, or q <return> to quit---
   0x08048bf0 <+355>:	ret    
End of assembler dump.
(gdb) 
0x08048b76	104	  return __printf_chk (__USE_FORTIFY_LEVEL - 1, __fmt, __va_arg_pack ());
Dump of assembler code for function main:
   0x08048a8d <+0>:	push   %ebp
   0x08048a8e <+1>:	mov    %esp,%ebp
   0x08048a90 <+3>:	push   %ebx
   0x08048a91 <+4>:	and    $0xfffffff0,%esp
   0x08048a94 <+7>:	sub    $0x10,%esp
   0x08048a97 <+10>:	mov    0x8(%ebp),%eax
   0x08048a9a <+13>:	mov    0xc(%ebp),%ebx
   0x08048a9d <+16>:	cmp    $0x1,%eax
   0x08048aa0 <+19>:	jne    0x8048aae <main+33>
   0x08048aa2 <+21>:	mov    0x804d7e4,%eax
   0x08048aa7 <+26>:	mov    %eax,0x804d80c
   0x08048aac <+31>:	jmp    0x8048b22 <main+149>
   0x08048aae <+33>:	cmp    $0x2,%eax
   0x08048ab1 <+36>:	jne    0x8048afc <main+111>
   0x08048ab3 <+38>:	movl   $0x804a360,0x4(%esp)
   0x08048abb <+46>:	mov    0x4(%ebx),%eax
   0x08048abe <+49>:	mov    %eax,(%esp)
   0x08048ac1 <+52>:	call   0x80488e0 <fopen@plt>
   0x08048ac6 <+57>:	mov    %eax,0x804d80c
   0x08048acb <+62>:	test   %eax,%eax
   0x08048acd <+64>:	jne    0x8048b22 <main+149>
   0x08048acf <+66>:	mov    0x4(%ebx),%eax
   0x08048ad2 <+69>:	mov    %eax,0xc(%esp)
   0x08048ad6 <+73>:	mov    (%ebx),%eax
   0x08048ad8 <+75>:	mov    %eax,0x8(%esp)
   0x08048adc <+79>:	movl   $0x804a362,0x4(%esp)
   0x08048ae4 <+87>:	movl   $0x1,(%esp)
   0x08048aeb <+94>:	call   0x8048900 <__printf_chk@plt>
   0x08048af0 <+99>:	movl   $0x8,(%esp)
   0x08048af7 <+106>:	call   0x8048890 <exit@plt>
   0x08048afc <+111>:	mov    (%ebx),%eax
   0x08048afe <+113>:	mov    %eax,0x8(%esp)
   0x08048b02 <+117>:	movl   $0x804a37f,0x4(%esp)
   0x08048b0a <+125>:	movl   $0x1,(%esp)
   0x08048b11 <+132>:	call   0x8048900 <__printf_chk@plt>
   0x08048b16 <+137>:	movl   $0x8,(%esp)
   0x08048b1d <+144>:	call   0x8048890 <exit@plt>
   0x08048b22 <+149>:	call   0x80491c6 <initialize_bomb>
   0x08048b27 <+154>:	movl   $0x804a3e4,(%esp)
---Type <return> to continue, or q <return> to quit---
   0x08048b2e <+161>:	call   0x8048850 <puts@plt>
   0x08048b33 <+166>:	movl   $0x804a420,(%esp)
   0x08048b3a <+173>:	call   0x8048850 <puts@plt>
   0x08048b3f <+178>:	call   0x80494e4 <read_line>
   0x08048b44 <+183>:	mov    %eax,(%esp)
   0x08048b47 <+186>:	call   0x8048c00 <phase_1>
   0x08048b4c <+191>:	call   0x80495de <phase_defused>
   0x08048b51 <+196>:	movl   $0x804a44c,(%esp)
   0x08048b58 <+203>:	call   0x8048850 <puts@plt>
   0x08048b5d <+208>:	call   0x80494e4 <read_line>
   0x08048b62 <+213>:	mov    %eax,(%esp)
   0x08048b65 <+216>:	call   0x8048c24 <phase_2>
   0x08048b6a <+221>:	call   0x80495de <phase_defused>
   0x08048b6f <+226>:	movl   $0x804a399,(%esp)
=> 0x08048b76 <+233>:	call   0x8048850 <puts@plt>
   0x08048b7b <+238>:	call   0x80494e4 <read_line>
   0x08048b80 <+243>:	mov    %eax,(%esp)
   0x08048b83 <+246>:	call   0x8048c7a <phase_3>
   0x08048b88 <+251>:	call   0x80495de <phase_defused>
   0x08048b8d <+256>:	movl   $0x804a3b7,(%esp)
   0x08048b94 <+263>:	call   0x8048850 <puts@plt>
   0x08048b99 <+268>:	call   0x80494e4 <read_line>
   0x08048b9e <+273>:	mov    %eax,(%esp)
   0x08048ba1 <+276>:	call   0x8048e29 <phase_4>
   0x08048ba6 <+281>:	call   0x80495de <phase_defused>
   0x08048bab <+286>:	movl   $0x804a478,(%esp)
   0x08048bb2 <+293>:	call   0x8048850 <puts@plt>
   0x08048bb7 <+298>:	call   0x80494e4 <read_line>
   0x08048bbc <+303>:	mov    %eax,(%esp)
   0x08048bbf <+306>:	call   0x8048e92 <phase_5>
   0x08048bc4 <+311>:	call   0x80495de <phase_defused>
   0x08048bc9 <+316>:	movl   $0x804a3c6,(%esp)
   0x08048bd0 <+323>:	call   0x8048850 <puts@plt>
   0x08048bd5 <+328>:	call   0x80494e4 <read_line>
   0x08048bda <+333>:	mov    %eax,(%esp)
   0x08048bdd <+336>:	call   0x8048f1c <phase_6>
   0x08048be2 <+341>:	call   0x80495de <phase_defused>
   0x08048be7 <+346>:	mov    $0x0,%eax
   0x08048bec <+351>:	mov    -0x4(%ebp),%ebx
   0x08048bef <+354>:	leave  
   0x08048bf0 <+355>:	ret    
---Type <return> to continue, or q <return> to quit---
End of assembler dump.
(gdb) 
That's number 2.  Keep going!
main (argc=2, argv=0xffffd6c4) at bomb.c:80
80	    input = read_line();
Dump of assembler code for function main:
   0x08048a8d <+0>:	push   %ebp
   0x08048a8e <+1>:	mov    %esp,%ebp
   0x08048a90 <+3>:	push   %ebx
   0x08048a91 <+4>:	and    $0xfffffff0,%esp
   0x08048a94 <+7>:	sub    $0x10,%esp
   0x08048a97 <+10>:	mov    0x8(%ebp),%eax
   0x08048a9a <+13>:	mov    0xc(%ebp),%ebx
   0x08048a9d <+16>:	cmp    $0x1,%eax
   0x08048aa0 <+19>:	jne    0x8048aae <main+33>
   0x08048aa2 <+21>:	mov    0x804d7e4,%eax
   0x08048aa7 <+26>:	mov    %eax,0x804d80c
   0x08048aac <+31>:	jmp    0x8048b22 <main+149>
   0x08048aae <+33>:	cmp    $0x2,%eax
   0x08048ab1 <+36>:	jne    0x8048afc <main+111>
   0x08048ab3 <+38>:	movl   $0x804a360,0x4(%esp)
   0x08048abb <+46>:	mov    0x4(%ebx),%eax
   0x08048abe <+49>:	mov    %eax,(%esp)
   0x08048ac1 <+52>:	call   0x80488e0 <fopen@plt>
   0x08048ac6 <+57>:	mov    %eax,0x804d80c
   0x08048acb <+62>:	test   %eax,%eax
   0x08048acd <+64>:	jne    0x8048b22 <main+149>
   0x08048acf <+66>:	mov    0x4(%ebx),%eax
   0x08048ad2 <+69>:	mov    %eax,0xc(%esp)
   0x08048ad6 <+73>:	mov    (%ebx),%eax
   0x08048ad8 <+75>:	mov    %eax,0x8(%esp)
   0x08048adc <+79>:	movl   $0x804a362,0x4(%esp)
   0x08048ae4 <+87>:	movl   $0x1,(%esp)
   0x08048aeb <+94>:	call   0x8048900 <__printf_chk@plt>
   0x08048af0 <+99>:	movl   $0x8,(%esp)
   0x08048af7 <+106>:	call   0x8048890 <exit@plt>
   0x08048afc <+111>:	mov    (%ebx),%eax
   0x08048afe <+113>:	mov    %eax,0x8(%esp)
   0x08048b02 <+117>:	movl   $0x804a37f,0x4(%esp)
   0x08048b0a <+125>:	movl   $0x1,(%esp)
   0x08048b11 <+132>:	call   0x8048900 <__printf_chk@plt>
   0x08048b16 <+137>:	movl   $0x8,(%esp)
   0x08048b1d <+144>:	call   0x8048890 <exit@plt>
   0x08048b22 <+149>:	call   0x80491c6 <initialize_bomb>
---Type <return> to continue, or q <return> to quit---
   0x08048b27 <+154>:	movl   $0x804a3e4,(%esp)
   0x08048b2e <+161>:	call   0x8048850 <puts@plt>
   0x08048b33 <+166>:	movl   $0x804a420,(%esp)
   0x08048b3a <+173>:	call   0x8048850 <puts@plt>
   0x08048b3f <+178>:	call   0x80494e4 <read_line>
   0x08048b44 <+183>:	mov    %eax,(%esp)
   0x08048b47 <+186>:	call   0x8048c00 <phase_1>
   0x08048b4c <+191>:	call   0x80495de <phase_defused>
   0x08048b51 <+196>:	movl   $0x804a44c,(%esp)
   0x08048b58 <+203>:	call   0x8048850 <puts@plt>
   0x08048b5d <+208>:	call   0x80494e4 <read_line>
   0x08048b62 <+213>:	mov    %eax,(%esp)
   0x08048b65 <+216>:	call   0x8048c24 <phase_2>
   0x08048b6a <+221>:	call   0x80495de <phase_defused>
   0x08048b6f <+226>:	movl   $0x804a399,(%esp)
   0x08048b76 <+233>:	call   0x8048850 <puts@plt>
=> 0x08048b7b <+238>:	call   0x80494e4 <read_line>
   0x08048b80 <+243>:	mov    %eax,(%esp)
   0x08048b83 <+246>:	call   0x8048c7a <phase_3>
   0x08048b88 <+251>:	call   0x80495de <phase_defused>
   0x08048b8d <+256>:	movl   $0x804a3b7,(%esp)
   0x08048b94 <+263>:	call   0x8048850 <puts@plt>
   0x08048b99 <+268>:	call   0x80494e4 <read_line>
   0x08048b9e <+273>:	mov    %eax,(%esp)
   0x08048ba1 <+276>:	call   0x8048e29 <phase_4>
   0x08048ba6 <+281>:	call   0x80495de <phase_defused>
   0x08048bab <+286>:	movl   $0x804a478,(%esp)
   0x08048bb2 <+293>:	call   0x8048850 <puts@plt>
   0x08048bb7 <+298>:	call   0x80494e4 <read_line>
   0x08048bbc <+303>:	mov    %eax,(%esp)
   0x08048bbf <+306>:	call   0x8048e92 <phase_5>
   0x08048bc4 <+311>:	call   0x80495de <phase_defused>
   0x08048bc9 <+316>:	movl   $0x804a3c6,(%esp)
   0x08048bd0 <+323>:	call   0x8048850 <puts@plt>
   0x08048bd5 <+328>:	call   0x80494e4 <read_line>
   0x08048bda <+333>:	mov    %eax,(%esp)
   0x08048bdd <+336>:	call   0x8048f1c <phase_6>
   0x08048be2 <+341>:	call   0x80495de <phase_defused>
   0x08048be7 <+346>:	mov    $0x0,%eax
   0x08048bec <+351>:	mov    -0x4(%ebp),%ebx
   0x08048bef <+354>:	leave  
---Type <return> to continue, or q <return> to quit---
   0x08048bf0 <+355>:	ret    
End of assembler dump.
(gdb) 





rt
81	    phase_3(input);
Dump of assembler code for function main:
   0x08048a8d <+0>:	push   %ebp
   0x08048a8e <+1>:	mov    %esp,%ebp
   0x08048a90 <+3>:	push   %ebx
   0x08048a91 <+4>:	and    $0xfffffff0,%esp
   0x08048a94 <+7>:	sub    $0x10,%esp
   0x08048a97 <+10>:	mov    0x8(%ebp),%eax
   0x08048a9a <+13>:	mov    0xc(%ebp),%ebx
   0x08048a9d <+16>:	cmp    $0x1,%eax
   0x08048aa0 <+19>:	jne    0x8048aae <main+33>
   0x08048aa2 <+21>:	mov    0x804d7e4,%eax
   0x08048aa7 <+26>:	mov    %eax,0x804d80c
   0x08048aac <+31>:	jmp    0x8048b22 <main+149>
   0x08048aae <+33>:	cmp    $0x2,%eax
   0x08048ab1 <+36>:	jne    0x8048afc <main+111>
   0x08048ab3 <+38>:	movl   $0x804a360,0x4(%esp)
   0x08048abb <+46>:	mov    0x4(%ebx),%eax
   0x08048abe <+49>:	mov    %eax,(%esp)
   0x08048ac1 <+52>:	call   0x80488e0 <fopen@plt>
   0x08048ac6 <+57>:	mov    %eax,0x804d80c
   0x08048acb <+62>:	test   %eax,%eax
   0x08048acd <+64>:	jne    0x8048b22 <main+149>
   0x08048acf <+66>:	mov    0x4(%ebx),%eax
   0x08048ad2 <+69>:	mov    %eax,0xc(%esp)
   0x08048ad6 <+73>:	mov    (%ebx),%eax
   0x08048ad8 <+75>:	mov    %eax,0x8(%esp)
   0x08048adc <+79>:	movl   $0x804a362,0x4(%esp)
   0x08048ae4 <+87>:	movl   $0x1,(%esp)
   0x08048aeb <+94>:	call   0x8048900 <__printf_chk@plt>
   0x08048af0 <+99>:	movl   $0x8,(%esp)
   0x08048af7 <+106>:	call   0x8048890 <exit@plt>
   0x08048afc <+111>:	mov    (%ebx),%eax
   0x08048afe <+113>:	mov    %eax,0x8(%esp)
   0x08048b02 <+117>:	movl   $0x804a37f,0x4(%esp)
   0x08048b0a <+125>:	movl   $0x1,(%esp)
   0x08048b11 <+132>:	call   0x8048900 <__printf_chk@plt>
   0x08048b16 <+137>:	movl   $0x8,(%esp)
   0x08048b1d <+144>:	call   0x8048890 <exit@plt>
   0x08048b22 <+149>:	call   0x80491c6 <initialize_bomb>
   0x08048b27 <+154>:	movl   $0x804a3e4,(%esp)
---Type <return> to continue, or q <return> to quit---q
Quit
(gdb) q
A debugging session is active.

	Inferior 1 [process 11496] will be killed.

Quit anyway? (y or n) y
]0;ylu236@ylu236: ~/fall2015/cs485g/p1/bomb92ylu236@ylu236:~/fall2015/cs485g/p1/bomb92$ l[Kv[Kls -l
total 264
-rwxrwxr-x 1 ylu236 ylu236  28104 Oct  1 09:01 [0m[01;32mbomb[0m
-rw-r--r-- 1 ylu236 ylu236   3545 Oct  1 09:01 bomb.c
-rw-rw-r-- 1 ylu236 ylu236     42 Oct  1 09:27 Defuse_Commands.txt
-rw-rw-r-- 1 ylu236 ylu236 229376 Oct  1 10:08 Luo_p1.txt
-rw-rw-r-- 1 ylu236 ylu236     56 Oct  1 09:01 README
]0;ylu236@ylu236: ~/fall2015/cs485g/p1/bomb92ylu236@ylu236:~/fall2015/cs485g/p1/bomb92$ vim Defuse_Commands.txt 
[?1049h[?1h=[2;1Hâ–½[6n[1;1H  [1;1H[1;42r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[42;1H"Defuse_Commands.txt" 1L, 42C[>c[1;1HFor NASA, space is still a high priority.
[94m~                                                                                                                                 [3;1H~                                                                                                                                 [4;1H~                                                                                                                                 [5;1H~                                                                                                                                 [6;1H~                                                                                                                                 [7;1H~                                                                                                                                 [8;1H~                                                                                                                                 [9;1H~                                                                                                                                 [10;1H~                                                                                                                                 [11;1H~                                                                                                                                 [12;1H~                                                                                                                                 [13;1H~                                                                                                                                 [14;1H~                                                                                                                                 [15;1H~                                                                                                                                 [16;1H~                                                                                                                                 [17;1H~                                                                                                                                 [18;1H~                                                                                                                                 [19;1H~                                                                                                                                 [20;1H~                                                                                                                                 [21;1H~                                                                                                                                 [22;1H~                                                                                                                                 [23;1H~                                                                                                                                 [24;1H~                                                                                                                                 [25;1H~                                                                                                                                 [26;1H~                                                                                                                                 [27;1H~                                                                                                                                 [28;1H~                                                                                                                                 [29;1H~                                                                                                                                 [30;1H~                                                                                                                                 [31;1H~                                                                                                                                 [32;1H~                                                                                                                                 [33;1H~                                                                                                                                 [34;1H~                                                                                                                                 [35;1H~                                                                                                                                 [36;1H~                                                                                                                                 [37;1H~                                                                                                                                 [38;1H~                                                                                                                                 [39;1H~                                                                                                                                 [40;1H~                                                                                                                                 [41;1H~                                                                                                                                 [m[42;113H1,1[11CAll[1;1H[?12l[?25h[?25l[42;1H[1m-- INSERT --[m[42;13H[K[42;113H1,1[11CAll[1;1H[?12l[?25h[?25l[42;115H2[1;2H[?12l[?25h[?25l[42;115H3[1;3H[?12l[?25h[?25l[42;115H4[1;4H[?12l[?25h[?25l[42;115H5[1;5H[?12l[?25h[?25l[42;115H6[1;6H[?12l[?25h[?25l[42;115H7[1;7H[?12l[?25h[?25l[42;115H8[1;8H[?12l[?25h[?25l[42;115H9[1;9H[?12l[?25h[?25l[42;115H10[1;10H[?12l[?25h[?25l[42;116H1[1;11H[?12l[?25h[?25l[42;116H2[1;12H[?12l[?25h[?25l[42;116H3[1;13H[?12l[?25h[?25l[42;116H4[1;14H[?12l[?25h[?25l[42;116H5[1;15H[?12l[?25h[?25l[42;116H6[1;16H[?12l[?25h[?25l[42;116H7[1;17H[?12l[?25h[?25l[42;116H8[1;18H[?12l[?25h[?25l[42;116H9[1;19H[?12l[?25h[?25l[42;115H20[1;20H[?12l[?25h[?25l[42;116H1[1;21H[?12l[?25h[?25l[42;116H2[1;22H[?12l[?25h[?25l[42;116H3[1;23H[?12l[?25h[?25l[42;116H4[1;24H[?12l[?25h[?25l[42;116H5[1;25H[?12l[?25h[?25l[42;116H6[1;26H[?12l[?25h[?25l[42;116H7[1;27H[?12l[?25h[?25l[42;116H8[1;28H[?12l[?25h[?25l[42;116H9[1;29H[?12l[?25h[?25l[42;115H30[1;30H[?12l[?25h[?25l[42;116H1[1;31H[?12l[?25h[?25l[42;116H2[1;32H[?12l[?25h[?25l[42;116H3[1;33H[?12l[?25h[?25l[42;116H4[1;34H[?12l[?25h[?25l[42;116H5[1;35H[?12l[?25h[?25l[42;116H6[1;36H[?12l[?25h[?25l[42;116H7[1;37H[?12l[?25h[?25l[42;116H8[1;38H[?12l[?25h[?25l[42;116H9[1;39H[?12l[?25h[?25l[42;115H40[1;40H[?12l[?25h[?25l[42;116H1[1;41H[?12l[?25h[?25l[42;116H2[1;42H[?12l[?25h[?25l[2;1H[K[42;113H2,1 [2;1H[?12l[?25h[?25l0[42;115H2[2;2H[?12l[?25h[?25l[42;115H3[2;3H[?12l[?25h[?25l1[42;115H4[2;4H[?12l[?25h[?25l[42;115H5[2;5H[?12l[?25h[?25l1[42;115H6[2;6H[?12l[?25h[?25l[42;115H7[2;7H[?12l[?25h[?25l2[42;115H8[2;8H[?12l[?25h[?25l[42;115H9[2;9H[?12l[?25h[?25l3[42;115H10[2;10H[?12l[?25h[?25l[42;116H1[2;11H[?12l[?25h[?25l5[42;116H2[2;12H[?12l[?25h[42;1H[K[2;11H[?25l[42;113H2,11[10CAll[2;11H[?12l[?25h[?25l[42;113H[K[42;1H:[?12l[?25hw[?25l[?12l[?25hq[?25l[?12l[?25h![?25l[?12l[?25h[?25l"Defuse_Commands.txt" 2L, 54C written
[?1l>[?12l[?25h[?1049l]0;ylu236@ylu236: ~/fall2015/cs485g/p1/bomb92ylu236@ylu236:~/fall2015/cs485g/p1/bomb92$ gdb bomb 
GNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1
Copyright (C) 2014 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from bomb...done.
(gdb) b phase_2[K3
Breakpoint 1 at 0x8048c7a
(gdb) b explode_bome[Kb
Breakpoint 2 at 0x8049455
(gdb) define rt
Type commands for definition of "rt".
End with a line saying just "end".
>ni
>disas
>end
(gdb) r Defuse_Commands.txt 
Starting program: /home/ylu236/fall2015/cs485g/p1/bomb92/bomb Defuse_Commands.txt
Welcome to my fiendish little bomb. You have 6 phases with
which to blow yourself up. Have a nice day!
Phase 1 defused. How about the next one?
That's number 2.  Keep going!
a a a a

Breakpoint 1, 0x08048c7a in phase_3 ()
(gdb) rt
0x08048c7d in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
=> 0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---rt
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048c81 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
=> 0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---rt
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048c85 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
=> 0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---rt
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048c89 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
=> 0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---rt
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048c8d in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
=> 0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048c91 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
=> 0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---x[K
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) x/s 0x80dad[K[K[K4adee
0x804adee:	".netlab.uky.edu"
(gdb) rt
0x08048c95 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
=> 0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) x/s $esp
0xffffd5d0:	"\300\330\004\bP"
(gdb) i r
eax            0xffffd5f8	-10760
ecx            0x8	8
edx            0x3	3
ebx            0xffffd6c4	-10556
esp            0xffffd5d0	0xffffd5d0
ebp            0xffffd628	0xffffd628
esi            0x0	0
edi            0x0	0
eip            0x8048c95	0x8048c95 <phase_3+27>
eflags         0x282	[ SF IF ]
cs             0x23	35
ss             0x2b	43
ds             0x2b	43
es             0x2b	43
fs             0x0	0
gs             0x63	99
(gdb) x/s 0f[Kxffffd5d0
0xffffd5d0:	"\300\330\004\bP"
(gdb) print i[K*(int*) 0xffffd5d0
$1 = 134535360
(gdb) rt
0x08048c9d in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
=> 0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---rt
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048ca1 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
=> 0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---rt
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048ca4 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
=> 0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---rt
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048ca9 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
=> 0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---i r
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) ir [K[K r
eax            0x0	0
ecx            0x0	0
edx            0x804d8c0	134535360
ebx            0xffffd6c4	-10556
esp            0xffffd5d0	0xffffd5d0
ebp            0xffffd628	0xffffd628
esi            0x0	0
edi            0x0	0
eip            0x8048ca9	0x8048ca9 <phase_3+47>
eflags         0x286	[ PF SF IF ]
cs             0x23	35
ss             0x2b	43
ds             0x2b	43
es             0x2b	43
fs             0x0	0
gs             0x63	99
(gdb) rt
0x08048cac in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
=> 0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---rt
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048cae in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
=> 0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---q
Quit
(gdb) q
A debugging session is active.

	Inferior 1 [process 11519] will be killed.

Quit anyway? (y or n) y
]0;ylu236@ylu236: ~/fall2015/cs485g/p1/bomb92ylu236@ylu236:~/fall2015/cs485g/p1/bomb92$ gdb bomb 
GNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1
Copyright (C) 2014 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from bomb...done.
(gdb) b phase_3
Breakpoint 1 at 0x8048c7a
(gdb) r[Kr Defuse_Commands.txt 
Starting program: /home/ylu236/fall2015/cs485g/p1/bomb92/bomb Defuse_Commands.txt
Welcome to my fiendish little bomb. You have 6 phases with
which to blow yourself up. Have a nice day!
Phase 1 defused. How about the next one?
That's number 2.  Keep going!
1 1 2

Breakpoint 1, 0x08048c7a in phase_3 ()
(gdb) x/s 0x8048c7a
0x8048c7a <phase_3>:	"\203\354<\215D$,\211D$\020\215D$'\211D$\f\215D$(\211D$\b\307D$\004\356\244\004\b\213D$@\211\004$\350'\374\377\377\203\370\002\177\005\350\242\a"
(gdb) define rt
Type commands for definition of "rt".
End with a line saying just "end".
>ni
>disas
>end
(gdb) i r
eax            0x804d8c0	134535360
ecx            0x6	6
edx            0x3	3
ebx            0xffffd6c4	-10556
esp            0xffffd60c	0xffffd60c
ebp            0xffffd628	0xffffd628
esi            0x0	0
edi            0x0	0
eip            0x8048c7a	0x8048c7a <phase_3>
eflags         0x286	[ PF SF IF ]
cs             0x23	35
ss             0x2b	43
ds             0x2b	43
es             0x2b	43
fs             0x0	0
gs             0x63	99
(gdb) rt
0x08048c7d in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
=> 0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) p/x $eax
$1 = 0x804d8c0
(gdb) x/s 0x804d8c0
0x804d8c0 <input_strings+160>:	"1 1 2"
(gdb) exit[K[K[K[Kq
A debugging session is active.

	Inferior 1 [process 11531] will be killed.

Quit anyway? (y or n) y
]0;ylu236@ylu236: ~/fall2015/cs485g/p1/bomb92ylu236@ylu236:~/fall2015/cs485g/p1/bomb92$ gdb [K[K[K[Kgdb bomb 
GNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1
Copyright (C) 2014 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from bomb...done.
(gdb) p[Kb phase_3
Breakpoint 1 at 0x8048c7a
(gdb) r Defuse_Commands.txt 
Starting program: /home/ylu236/fall2015/cs485g/p1/bomb92/bomb Defuse_Commands.txt
Welcome to my fiendish little bomb. You have 6 phases with
which to blow yourself up. Have a nice day!
Phase 1 defused. How about the next one?
That's number 2.  Keep going!
test string

Breakpoint 1, 0x08048c7a in phase_3 ()
(gdb) x/s 0x08048c7a
0x8048c7a <phase_3>:	"\203\354<\215D$,\211D$\020\215D$'\211D$\f\215D$(\211D$\b\307D$\004\356\244\004\b\213D$@\211\004$\350'\374\377\377\203\370\002\177\005\350\242\a"
(gdb) x/s 0x08048c7a[C[1P8048c7a
0x8048c7a <phase_3>:	"\203\354<\215D$,\211D$\020\215D$'\211D$\f\215D$(\211D$\b\307D$\004\356\244\004\b\213D$@\211\004$\350'\374\377\377\203\370\002\177\005\350\242\a"
(gdb) print (char**[K) 0x8048c7a
$1 = 0x8048c7a <phase_3> "\203\354<\215D$,\211D$\020\215D$'\211D$\f\215D$(\211D$\b\307D$\004\356\244\004\b\213D$@\211\004$\350'\374\377\377\203\370\002\177\005\350\242\a"
(gdb) ni
0x08048c7d in phase_3 ()
(gdb) disas
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
=> 0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
---Type <return> to continue, or q <return> to quit---
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) x/s 08041[Ka4ee
Invalid number "0804a4ee".
(gdb) x/s 0804a4ee[C0804a4eex0804a4ee
0x804a4ee:	"%d %c %d"
(gdb) define rt
Type commands for definition of "rt".
End with a line saying just "end".
>ni
>disas
>end
(gdb) e[Kq
A debugging session is active.

	Inferior 1 [process 11548] will be killed.

Quit anyway? (y or n) y r r
Please answer y or n.
A debugging session is active.

	Inferior 1 [process 11548] will be killed.

Quit anyway? (y or n) n
Not confirmed.
(gdb) r Defuse_Commands.txt 
The program being debugged has been started already.
Start it from the beginning? (y or n) y
Starting program: /home/ylu236/fall2015/cs485g/p1/bomb92/bomb Defuse_Commands.txt
Welcome to my fiendish little bomb. You have 6 phases with
which to blow yourself up. Have a nice day!
Phase 1 defused. How about the next one?
That's number 2.  Keep going!
1 a 2

Breakpoint 1, 0x08048c7a in phase_3 ()
(gdb) define rt
Redefine command "rt"? (y or n) n
Command "rt" not redefined.
(gdb) rt
0x08048c7d in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
=> 0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---r[K
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048c81 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
=> 0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048c85 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
=> 0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048c89 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
=> 0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048c8d in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
=> 0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048c91 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
=> 0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048c95 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
=> 0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048c9d in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
=> 0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---r
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048ca1 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
=> 0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048ca4 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
=> 0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048ca9 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
=> 0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048cac in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
=> 0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048cb3 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
=> 0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048cb8 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
=> 0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048cbe in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
=> 0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048cc2 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
=> 0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048ceb in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
=> 0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt[K[Kr Defuse_Commands.txt 
The program being debugged has been started already.
Start it from the beginning? (y or n) y
Starting program: /home/ylu236/fall2015/cs485g/p1/bomb92/bomb Defuse_Commands.txt
Welcome to my fiendish little bomb. You have 6 phases with
which to blow yourself up. Have a nice day!
Phase 1 defused. How about the next one?
That's number 2.  Keep going!
1 a 2

Breakpoint 1, 0x08048c7a in phase_3 ()
(gdb) rt
0x08048c7d in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
=> 0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---rt
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048c81 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
=> 0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---rt
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048c85 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
=> 0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---rt
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048c89 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
=> 0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048c8d in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
=> 0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---rt
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048c91 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
=> 0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048c95 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
=> 0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048c9d in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
=> 0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048ca1 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
=> 0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) ir[K r
eax            0x804d8c0	134535360
ecx            0x6	6
edx            0x3	3
ebx            0xffffd6c4	-10556
esp            0xffffd5d0	0xffffd5d0
ebp            0xffffd628	0xffffd628
esi            0x0	0
edi            0x0	0
eip            0x8048ca1	0x8048ca1 <phase_3+39>
eflags         0x282	[ SF IF ]
cs             0x23	35
ss             0x2b	43
ds             0x2b	43
es             0x2b	43
fs             0x0	0
gs             0x63	99
(gdb) x/s 0x804d8c0
0x804d8c0 <input_strings+160>:	"1 a 2"
(gdb) 
0x804d8c6 <input_strings+166>:	""
(gdb) e[Krt
0x08048ca4 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
=> 0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048ca9 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
=> 0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) i r
eax            0x3	3
ecx            0x0	0
edx            0xffffd5fc	-10756
ebx            0xffffd6c4	-10556
esp            0xffffd5d0	0xffffd5d0
ebp            0xffffd628	0xffffd628
esi            0x0	0
edi            0x0	0
eip            0x8048ca9	0x8048ca9 <phase_3+47>
eflags         0x286	[ PF SF IF ]
cs             0x23	35
ss             0x2b	43
ds             0x2b	43
es             0x2b	43
fs             0x0	0
gs             0x63	99
(gdb) x/s 0x2
0x2:	<error: Cannot access memory at address 0x2>
(gdb) rt
0x08048cac in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
=> 0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---rt
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048cb3 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
=> 0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) p/x $esp
$2 = 0xffffd5d0
(gdb) x/s 0xffffd5f8
0xffffd5f8:	"\001"
(gdb) i r
eax            0x3	3
ecx            0x0	0
edx            0xffffd5fc	-10756
ebx            0xffffd6c4	-10556
esp            0xffffd5d0	0xffffd5d0
ebp            0xffffd628	0xffffd628
esi            0x0	0
edi            0x0	0
eip            0x8048cb3	0x8048cb3 <phase_3+57>
eflags         0x202	[ IF ]
cs             0x23	35
ss             0x2b	43
ds             0x2b	43
es             0x2b	43
fs             0x0	0
gs             0x63	99
(gdb) rt
0x08048cb8 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
=> 0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---rt
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048cbe in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
=> 0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---i [K[K
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) i r
eax            0x3	3
ecx            0x0	0
edx            0xffffd5fc	-10756
ebx            0xffffd6c4	-10556
esp            0xffffd5d0	0xffffd5d0
ebp            0xffffd628	0xffffd628
esi            0x0	0
edi            0x0	0
eip            0x8048cbe	0x8048cbe <phase_3+68>
eflags         0x297	[ CF PF AF SF IF ]
cs             0x23	35
ss             0x2b	43
ds             0x2b	43
es             0x2b	43
fs             0x0	0
gs             0x63	99
(gdb) rt
0x08048cc2 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
=> 0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) i r
eax            0x1	1
ecx            0x0	0
edx            0xffffd5fc	-10756
ebx            0xffffd6c4	-10556
esp            0xffffd5d0	0xffffd5d0
ebp            0xffffd628	0xffffd628
esi            0x0	0
edi            0x0	0
eip            0x8048cc2	0x8048cc2 <phase_3+72>
eflags         0x297	[ CF PF AF SF IF ]
cs             0x23	35
ss             0x2b	43
ds             0x2b	43
es             0x2b	43
fs             0x0	0
gs             0x63	99
(gdb) rt
0x08048ceb in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
=> 0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---rt[K[K
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048cf0 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
=> 0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) i r
eax            0x6c	108
ecx            0x0	0
edx            0xffffd5fc	-10756
ebx            0xffffd6c4	-10556
esp            0xffffd5d0	0xffffd5d0
ebp            0xffffd628	0xffffd628
esi            0x0	0
edi            0x0	0
eip            0x8048cf0	0x8048cf0 <phase_3+118>
eflags         0x297	[ CF PF AF SF IF ]
cs             0x23	35
ss             0x2b	43
ds             0x2b	43
es             0x2b	43
fs             0x0	0
gs             0x63	99
(gdb) p/s $esp
$3 = (void *) 0xffffd5d0
(gdb) x/s 0xffffd5fc
0xffffd5fc:	"\002"
(gdb) r Defuse_Commands.txt 
The program being debugged has been started already.
Start it from the beginning? (y or n) y
Starting program: /home/ylu236/fall2015/cs485g/p1/bomb92/bomb Defuse_Commands.txt
Welcome to my fiendish little bomb. You have 6 phases with
which to blow yourself up. Have a nice day!
Phase 1 defused. How about the next one?
That's number 2.  Keep going!
1 c   a 729

Breakpoint 1, 0x08048c7a in phase_3 ()
(gdb) d[Krt
0x08048c7d in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
=> 0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---rt
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048c81 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
=> 0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---rt
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048c85 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
=> 0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---rt
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048c89 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
=> 0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---rt
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048c8d in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
=> 0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048c91 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
=> 0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048c95 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
=> 0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048c9d in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
=> 0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048ca1 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
=> 0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048ca4 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
=> 0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048ca9 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
=> 0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048cac in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
=> 0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048cb3 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
=> 0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048cb8 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
=> 0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) 
0x08048cbe in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
=> 0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048cc2 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
=> 0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048ceb in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
=> 0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048cf0 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
=> 0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048cf8 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
=> 0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048dbd in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
=> 0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) p/x %a1
A syntax error in expression, near `%a1'.
(gdb) p/x %a1[1Pa1$a1
$4 = Value can't be converted to integer.
(gdb) x/s 0[K%a1
A syntax error in expression, near `%a1'.
(gdb) i r
eax            0x6c	108
ecx            0x0	0
edx            0xffffd5fc	-10756
ebx            0xffffd6c4	-10556
esp            0xffffd5d0	0xffffd5d0
ebp            0xffffd628	0xffffd628
esi            0x0	0
edi            0x0	0
eip            0x8048dbd	0x8048dbd <phase_3+323>
eflags         0x246	[ PF ZF IF ]
cs             0x23	35
ss             0x2b	43
ds             0x2b	43
es             0x2b	43
fs             0x0	0
gs             0x63	99
(gdb) i rx/s %a1[K[K[K$a1
Value can't be converted to integer.
(gdb) x/s $a1[1P $a1[C[C[C[C[K[K[K[K[K[Kp/x $a1
$5 = Value can't be converted to integer.
(gdb) rt
0x08048dc1 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
=> 0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048dc3 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
=> 0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) i r
eax            0x6c	108
ecx            0x0	0
edx            0xffffd5fc	-10756
ebx            0xffffd6c4	-10556
esp            0xffffd5d0	0xffffd5d0
ebp            0xffffd628	0xffffd628
esi            0x0	0
edi            0x0	0
eip            0x8048dc3	0x8048dc3 <phase_3+329>
eflags         0x202	[ IF ]
cs             0x23	35
ss             0x2b	43
ds             0x2b	43
es             0x2b	43
fs             0x0	0
gs             0x63	99
(gdb) print /d $a1
$6 = Value can't be converted to integer.
(gdb) i locals
No symbol table info available.
(gdb) i r
eax            0x6c	108
ecx            0x0	0
edx            0xffffd5fc	-10756
ebx            0xffffd6c4	-10556
esp            0xffffd5d0	0xffffd5d0
ebp            0xffffd628	0xffffd628
esi            0x0	0
edi            0x0	0
eip            0x8048dc3	0x8048dc3 <phase_3+329>
eflags         0x202	[ IF ]
cs             0x23	35
ss             0x2b	43
ds             0x2b	43
es             0x2b	43
fs             0x0	0
gs             0x63	99
(gdb) q
A debugging session is active.

	Inferior 1 [process 11559] will be killed.

Quit anyway? (y or n) y
]0;ylu236@ylu236: ~/fall2015/cs485g/p1/bomb92ylu236@ylu236:~/fall2015/cs485g/p1/bomb92$ gdb bomb 
GNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1
Copyright (C) 2014 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from bomb...done.
(gdb) defi[K[K[K[Kdefine rt
Type commands for definition of "rt".
End with a line saying just "end".
>ni
>disas
>end
(gdb) b phase_3
Breakpoint 1 at 0x8048c7a
(gdb) r Defuse_Commands.txt 
Starting program: /home/ylu236/fall2015/cs485g/p1/bomb92/bomb Defuse_Commands.txt
Welcome to my fiendish little bomb. You have 6 phases with
which to blow yourself up. Have a nice day!
Phase 1 defused. How about the next one?
That's number 2.  Keep going!
1 b 729

Breakpoint 1, 0x08048c7a in phase_3 ()
(gdb) rt
0x08048c7d in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
=> 0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---rt[K[K
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048c81 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
=> 0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048c85 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
=> 0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048c89 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
=> 0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048c8d in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
=> 0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048c91 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
=> 0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048c95 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
=> 0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048c9d in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
=> 0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048ca1 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
=> 0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048ca4 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
=> 0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048ca9 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
=> 0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048cac in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
=> 0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048cb3 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
=> 0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048cb8 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
=> 0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048cbe in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
=> 0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048cc2 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
=> 0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048ceb in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
=> 0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048cf0 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
=> 0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048cf8 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
=> 0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048dbd in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
=> 0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) p/x $esp
$1 = 0xffffd5d0
(gdb) x/s ff[K[K0xffffd5f7
0xffffd5f7:	"b\001"
(gdb) print (*[Kint*)*(int*)[C[C[C[C[C[C 0xffffd5f7
$2 = 354
(gdb) p/x $a1
$3 = Value can't be converted to integer.
(gdb) i r
eax            0x6c	108
ecx            0x0	0
edx            0xffffd5fc	-10756
ebx            0xffffd6c4	-10556
esp            0xffffd5d0	0xffffd5d0
ebp            0xffffd628	0xffffd628
esi            0x0	0
edi            0x0	0
eip            0x8048dbd	0x8048dbd <phase_3+323>
eflags         0x246	[ PF ZF IF ]
cs             0x23	35
ss             0x2b	43
ds             0x2b	43
es             0x2b	43
fs             0x0	0
gs             0x63	99
(gdb) r Defuse_Commands.txt 
The program being debugged has been started already.
Start it from the beginning? (y or n) y
Starting program: /home/ylu236/fall2015/cs485g/p1/bomb92/bomb Defuse_Commands.txt
Welcome to my fiendish little bomb. You have 6 phases with
which to blow yourself up. Have a nice day!
Phase 1 defused. How about the next one?
That's number 2.  Keep going!
1 l 729

Breakpoint 1, 0x08048c7a in phase_3 ()
(gdb) rt
0x08048c7d in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
=> 0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---r[K
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048c81 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
=> 0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048c85 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
=> 0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048c89 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
=> 0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048c8d in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
=> 0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048c91 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
=> 0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048c95 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
=> 0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048c9d in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
=> 0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048ca1 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
=> 0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048ca4 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
=> 0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048ca9 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
=> 0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048cac in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
=> 0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048cb3 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
=> 0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048cb8 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
=> 0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048cbe in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
=> 0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048cc2 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
=> 0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048ceb in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
=> 0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048cf0 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
=> 0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048cf8 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
=> 0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048dbd in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
=> 0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048dc1 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
=> 0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048dc8 in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
=> 0x08048dc8 <+334>:	add    $0x3c,%esp
   0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
0x08048dcb in phase_3 ()
Dump of assembler code for function phase_3:
   0x08048c7a <+0>:	sub    $0x3c,%esp
   0x08048c7d <+3>:	lea    0x2c(%esp),%eax
   0x08048c81 <+7>:	mov    %eax,0x10(%esp)
   0x08048c85 <+11>:	lea    0x27(%esp),%eax
   0x08048c89 <+15>:	mov    %eax,0xc(%esp)
   0x08048c8d <+19>:	lea    0x28(%esp),%eax
   0x08048c91 <+23>:	mov    %eax,0x8(%esp)
   0x08048c95 <+27>:	movl   $0x804a4ee,0x4(%esp)
   0x08048c9d <+35>:	mov    0x40(%esp),%eax
   0x08048ca1 <+39>:	mov    %eax,(%esp)
   0x08048ca4 <+42>:	call   0x80488d0 <__isoc99_sscanf@plt>
   0x08048ca9 <+47>:	cmp    $0x2,%eax
   0x08048cac <+50>:	jg     0x8048cb3 <phase_3+57>
   0x08048cae <+52>:	call   0x8049455 <explode_bomb>
   0x08048cb3 <+57>:	cmpl   $0x7,0x28(%esp)
   0x08048cb8 <+62>:	ja     0x8048db3 <phase_3+313>
   0x08048cbe <+68>:	mov    0x28(%esp),%eax
   0x08048cc2 <+72>:	jmp    *0x804a500(,%eax,4)
   0x08048cc9 <+79>:	mov    $0x73,%eax
   0x08048cce <+84>:	cmpl   $0x305,0x2c(%esp)
   0x08048cd6 <+92>:	je     0x8048dbd <phase_3+323>
   0x08048cdc <+98>:	call   0x8049455 <explode_bomb>
   0x08048ce1 <+103>:	mov    $0x73,%eax
   0x08048ce6 <+108>:	jmp    0x8048dbd <phase_3+323>
   0x08048ceb <+113>:	mov    $0x6c,%eax
   0x08048cf0 <+118>:	cmpl   $0x2d9,0x2c(%esp)
   0x08048cf8 <+126>:	je     0x8048dbd <phase_3+323>
   0x08048cfe <+132>:	call   0x8049455 <explode_bomb>
   0x08048d03 <+137>:	mov    $0x6c,%eax
   0x08048d08 <+142>:	jmp    0x8048dbd <phase_3+323>
   0x08048d0d <+147>:	mov    $0x6b,%eax
   0x08048d12 <+152>:	cmpl   $0xaf,0x2c(%esp)
   0x08048d1a <+160>:	je     0x8048dbd <phase_3+323>
   0x08048d20 <+166>:	call   0x8049455 <explode_bomb>
   0x08048d25 <+171>:	mov    $0x6b,%eax
   0x08048d2a <+176>:	jmp    0x8048dbd <phase_3+323>
   0x08048d2f <+181>:	mov    $0x77,%eax
   0x08048d34 <+186>:	cmpl   $0x339,0x2c(%esp)
   0x08048d3c <+194>:	je     0x8048dbd <phase_3+323>
---Type <return> to continue, or q <return> to quit---
   0x08048d3e <+196>:	call   0x8049455 <explode_bomb>
   0x08048d43 <+201>:	mov    $0x77,%eax
   0x08048d48 <+206>:	jmp    0x8048dbd <phase_3+323>
   0x08048d4a <+208>:	mov    $0x6d,%eax
   0x08048d4f <+213>:	cmpl   $0x28f,0x2c(%esp)
   0x08048d57 <+221>:	je     0x8048dbd <phase_3+323>
   0x08048d59 <+223>:	call   0x8049455 <explode_bomb>
   0x08048d5e <+228>:	mov    $0x6d,%eax
   0x08048d63 <+233>:	jmp    0x8048dbd <phase_3+323>
   0x08048d65 <+235>:	mov    $0x62,%eax
   0x08048d6a <+240>:	cmpl   $0x119,0x2c(%esp)
   0x08048d72 <+248>:	je     0x8048dbd <phase_3+323>
   0x08048d74 <+250>:	call   0x8049455 <explode_bomb>
   0x08048d79 <+255>:	mov    $0x62,%eax
   0x08048d7e <+260>:	jmp    0x8048dbd <phase_3+323>
   0x08048d80 <+262>:	mov    $0x69,%eax
   0x08048d85 <+267>:	cmpl   $0x90,0x2c(%esp)
   0x08048d8d <+275>:	je     0x8048dbd <phase_3+323>
   0x08048d8f <+277>:	call   0x8049455 <explode_bomb>
   0x08048d94 <+282>:	mov    $0x69,%eax
   0x08048d99 <+287>:	jmp    0x8048dbd <phase_3+323>
   0x08048d9b <+289>:	mov    $0x67,%eax
   0x08048da0 <+294>:	cmpl   $0x7c,0x2c(%esp)
   0x08048da5 <+299>:	je     0x8048dbd <phase_3+323>
   0x08048da7 <+301>:	call   0x8049455 <explode_bomb>
   0x08048dac <+306>:	mov    $0x67,%eax
   0x08048db1 <+311>:	jmp    0x8048dbd <phase_3+323>
   0x08048db3 <+313>:	call   0x8049455 <explode_bomb>
   0x08048db8 <+318>:	mov    $0x6d,%eax
   0x08048dbd <+323>:	cmp    0x27(%esp),%al
   0x08048dc1 <+327>:	je     0x8048dc8 <phase_3+334>
   0x08048dc3 <+329>:	call   0x8049455 <explode_bomb>
   0x08048dc8 <+334>:	add    $0x3c,%esp
=> 0x08048dcb <+337>:	ret    
End of assembler dump.
(gdb) rt
main (argc=2, argv=0xffffd6c4) at bomb.c:82
82	    phase_defused();
Dump of assembler code for function main:
   0x08048a8d <+0>:	push   %ebp
   0x08048a8e <+1>:	mov    %esp,%ebp
   0x08048a90 <+3>:	push   %ebx
   0x08048a91 <+4>:	and    $0xfffffff0,%esp
   0x08048a94 <+7>:	sub    $0x10,%esp
   0x08048a97 <+10>:	mov    0x8(%ebp),%eax
   0x08048a9a <+13>:	mov    0xc(%ebp),%ebx
   0x08048a9d <+16>:	cmp    $0x1,%eax
   0x08048aa0 <+19>:	jne    0x8048aae <main+33>
   0x08048aa2 <+21>:	mov    0x804d7e4,%eax
   0x08048aa7 <+26>:	mov    %eax,0x804d80c
   0x08048aac <+31>:	jmp    0x8048b22 <main+149>
   0x08048aae <+33>:	cmp    $0x2,%eax
   0x08048ab1 <+36>:	jne    0x8048afc <main+111>
   0x08048ab3 <+38>:	movl   $0x804a360,0x4(%esp)
   0x08048abb <+46>:	mov    0x4(%ebx),%eax
   0x08048abe <+49>:	mov    %eax,(%esp)
   0x08048ac1 <+52>:	call   0x80488e0 <fopen@plt>
   0x08048ac6 <+57>:	mov    %eax,0x804d80c
   0x08048acb <+62>:	test   %eax,%eax
   0x08048acd <+64>:	jne    0x8048b22 <main+149>
   0x08048acf <+66>:	mov    0x4(%ebx),%eax
   0x08048ad2 <+69>:	mov    %eax,0xc(%esp)
   0x08048ad6 <+73>:	mov    (%ebx),%eax
   0x08048ad8 <+75>:	mov    %eax,0x8(%esp)
   0x08048adc <+79>:	movl   $0x804a362,0x4(%esp)
   0x08048ae4 <+87>:	movl   $0x1,(%esp)
   0x08048aeb <+94>:	call   0x8048900 <__printf_chk@plt>
   0x08048af0 <+99>:	movl   $0x8,(%esp)
   0x08048af7 <+106>:	call   0x8048890 <exit@plt>
   0x08048afc <+111>:	mov    (%ebx),%eax
   0x08048afe <+113>:	mov    %eax,0x8(%esp)
   0x08048b02 <+117>:	movl   $0x804a37f,0x4(%esp)
   0x08048b0a <+125>:	movl   $0x1,(%esp)
   0x08048b11 <+132>:	call   0x8048900 <__printf_chk@plt>
   0x08048b16 <+137>:	movl   $0x8,(%esp)
   0x08048b1d <+144>:	call   0x8048890 <exit@plt>
   0x08048b22 <+149>:	call   0x80491c6 <initialize_bomb>
---Type <return> to continue, or q <return> to quit---
   0x08048b27 <+154>:	movl   $0x804a3e4,(%esp)
   0x08048b2e <+161>:	call   0x8048850 <puts@plt>
   0x08048b33 <+166>:	movl   $0x804a420,(%esp)
   0x08048b3a <+173>:	call   0x8048850 <puts@plt>
   0x08048b3f <+178>:	call   0x80494e4 <read_line>
   0x08048b44 <+183>:	mov    %eax,(%esp)
   0x08048b47 <+186>:	call   0x8048c00 <phase_1>
   0x08048b4c <+191>:	call   0x80495de <phase_defused>
   0x08048b51 <+196>:	movl   $0x804a44c,(%esp)
   0x08048b58 <+203>:	call   0x8048850 <puts@plt>
   0x08048b5d <+208>:	call   0x80494e4 <read_line>
   0x08048b62 <+213>:	mov    %eax,(%esp)
   0x08048b65 <+216>:	call   0x8048c24 <phase_2>
   0x08048b6a <+221>:	call   0x80495de <phase_defused>
   0x08048b6f <+226>:	movl   $0x804a399,(%esp)
   0x08048b76 <+233>:	call   0x8048850 <puts@plt>
   0x08048b7b <+238>:	call   0x80494e4 <read_line>
   0x08048b80 <+243>:	mov    %eax,(%esp)
   0x08048b83 <+246>:	call   0x8048c7a <phase_3>
=> 0x08048b88 <+251>:	call   0x80495de <phase_defused>
   0x08048b8d <+256>:	movl   $0x804a3b7,(%esp)
   0x08048b94 <+263>:	call   0x8048850 <puts@plt>
   0x08048b99 <+268>:	call   0x80494e4 <read_line>
   0x08048b9e <+273>:	mov    %eax,(%esp)
   0x08048ba1 <+276>:	call   0x8048e29 <phase_4>
   0x08048ba6 <+281>:	call   0x80495de <phase_defused>
   0x08048bab <+286>:	movl   $0x804a478,(%esp)
   0x08048bb2 <+293>:	call   0x8048850 <puts@plt>
   0x08048bb7 <+298>:	call   0x80494e4 <read_line>
   0x08048bbc <+303>:	mov    %eax,(%esp)
   0x08048bbf <+306>:	call   0x8048e92 <phase_5>
   0x08048bc4 <+311>:	call   0x80495de <phase_defused>
   0x08048bc9 <+316>:	movl   $0x804a3c6,(%esp)
   0x08048bd0 <+323>:	call   0x8048850 <puts@plt>
   0x08048bd5 <+328>:	call   0x80494e4 <read_line>
   0x08048bda <+333>:	mov    %eax,(%esp)
   0x08048bdd <+336>:	call   0x8048f1c <phase_6>
   0x08048be2 <+341>:	call   0x80495de <phase_defused>
   0x08048be7 <+346>:	mov    $0x0,%eax
   0x08048bec <+351>:	mov    -0x4(%ebp),%ebx
   0x08048bef <+354>:	leave  
---Type <return> to continue, or q <return> to quit---q[Kq
Quit
(gdb) e[Kq
A debugging session is active.

	Inferior 1 [process 11568] will be killed.

Quit anyway? (y or n) y
]0;ylu236@ylu236: ~/fall2015/cs485g/p1/bomb92ylu236@ylu236:~/fall2015/cs485g/p1/bomb92$ ls -l
total 704
-rwxrwxr-x 1 ylu236 ylu236  28104 Oct  1 09:01 [0m[01;32mbomb[0m
-rw-r--r-- 1 ylu236 ylu236   3545 Oct  1 09:01 bomb.c
-rw-rw-r-- 1 ylu236 ylu236     54 Oct  1 10:09 Defuse_Commands.txt
-rw-rw-r-- 1 ylu236 ylu236 679936 Oct  1 11:07 Luo_p1.txt
-rw-rw-r-- 1 ylu236 ylu236     56 Oct  1 09:01 README
]0;ylu236@ylu236: ~/fall2015/cs485g/p1/bomb92ylu236@ylu236:~/fall2015/cs485g/p1/bomb92$ vim Defuse_Commands.txt 
[?1049h[?1h=[2;1Hâ–½[6n[1;1H  [1;1H[1;42r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[42;1H"Defuse_Commands.txt" 2L, 54C[>c[1;1HFor NASA, space is still a high priority.
0 1 1 2 3 5
[94m~                                                                                                                                 [4;1H~                                                                                                                                 [5;1H~                                                                                                                                 [6;1H~                                                                                                                                 [7;1H~                                                                                                                                 [8;1H~                                                                                                                                 [9;1H~                                                                                                                                 [10;1H~                                                                                                                                 [11;1H~                                                                                                                                 [12;1H~                                                                                                                                 [13;1H~                                                                                                                                 [14;1H~                                                                                                                                 [15;1H~                                                                                                                                 [16;1H~                                                                                                                                 [17;1H~                                                                                                                                 [18;1H~                                                                                                                                 [19;1H~                                                                                                                                 [20;1H~                                                                                                                                 [21;1H~                                                                                                                                 [22;1H~                                                                                                                                 [23;1H~                                                                                                                                 [24;1H~                                                                                                                                 [25;1H~                                                                                                                                 [26;1H~                                                                                                                                 [27;1H~                                                                                                                                 [28;1H~                                                                                                                                 [29;1H~                                                                                                                                 [30;1H~                                                                                                                                 [31;1H~                                                                                                                                 [32;1H~                                                                                                                                 [33;1H~                                                                                                                                 [34;1H~                                                                                                                                 [35;1H~                                                                                                                                 [36;1H~                                                                                                                                 [37;1H~                                                                                                                                 [38;1H~                                                                                                                                 [39;1H~                                                                                                                                 [40;1H~                                                                                                                                 [41;1H~                                                                                                                                 [m[42;113H1,1[11CAll[1;1H[?12l[?25h[?25l[42;1H[1m-- INSERT --[m[42;13H[K[42;113H1,1[11CAll[1;1H[?12l[?25h[?25l[42;113H2[2;1H[?12l[?25h[?25l[42;115H2[2;2H[?12l[?25h[?25l[42;115H3[2;3H[?12l[?25h[?25l[42;115H4[2;4H[?12l[?25h[?25l[42;115H5[2;5H[?12l[?25h[?25l[42;115H6[2;6H[?12l[?25h[?25l[42;115H7[2;7H[?12l[?25h[?25l[42;115H8[2;8H[?12l[?25h[?25l[42;115H9[2;9H[?12l[?25h[?25l[42;115H10[2;10H[?12l[?25h[?25l[42;116H1[2;11H[?12l[?25h[?25l[42;116H2[2;12H[?12l[?25h[?25l[3;1H[K[42;113H3,1 [3;1H[?12l[?25h[?25l1[42;115H2[3;2H[?12l[?25h[?25l[42;115H3[3;3H[?12l[?25h[?25ll[42;115H4[3;4H[?12l[?25h[?25l[42;115H5[3;5H[?12l[?25h[?25l7[42;115H6[3;6H[?12l[?25h[?25l2[42;115H7[3;7H[?12l[?25h[?25l9[42;115H8[3;8H[?12l[?25h[?25l[3;7H[K[42;115H7[3;7H[?12l[?25h[?25l[3;6H[K[42;115H6[3;6H[?12l[?25h[?25l[3;5H[K[42;115H5[3;5H[?12l[?25h[?25l[42;115H4[3;4H[?12l[?25h[?25l[3;3H[K[42;115H3[3;3H[?12l[?25h[?25l[42;115H2[3;2H[?12l[?25h[?25l[3;1H[K[42;115H1[3;1H[?12l[?25h[?25l1[42;115H2[3;2H[?12l[?25h[?25l[42;115H3[3;3H[?12l[?25h[?25ll[42;115H4[3;4H[?12l[?25h[?25l[42;115H5[3;5H[?12l[?25h[?25l7[42;115H6[3;6H[?12l[?25h[?25l2[42;115H7[3;7H[?12l[?25h[?25l9[42;115H8[3;8H[?12l[?25h[42;1H[K[3;7H[?25l[42;113H3,7[11CAll[3;7H[?12l[?25h[?25l[42;113H[K[42;1H:[?12l[?25hw[?25l[?12l[?25hq[?25l[?12l[?25h