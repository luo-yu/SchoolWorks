import java.awt.Frame;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;

import javax.swing.JFrame;

import com.jogamp.opengl.GL;
import com.jogamp.opengl.GL2;
import com.jogamp.opengl.GLAutoDrawable;
import com.jogamp.opengl.GLCapabilities;
import com.jogamp.opengl.GLEventListener;
import com.jogamp.opengl.GLProfile;
import com.jogamp.opengl.awt.GLCanvas;
import com.jogamp.opengl.util.Animator;
import com.jogamp.opengl.util.FPSAnimator;

public class Vertex3F implements GLEventListener{

    private double theta = 0;
    private double s = 0;
    private double c = 0;

    public static void main(String[] args) {
        GLProfile glp = GLProfile.getDefault();
        GLCapabilities caps = new GLCapabilities(glp);
        GLCanvas canvas = new GLCanvas(caps);

        Frame frame = new Frame("AWT Window Test");
        frame.setSize(300, 300);
        frame.add(canvas);
        frame.setVisible(true);

        frame.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                System.exit(0);
            }
        });

        canvas.addGLEventListener(new Vertex3F());

       // Animator animator = new Animator(canvas);
        //animator.start();
    }

    @Override
    public void display(GLAutoDrawable drawable) {
    	
    	  GL2 gl = drawable.getGL().getGL2();

    	 
          gl.glClear(GL.GL_COLOR_BUFFER_BIT);

          // draw a triangle filling the window
          gl.glBegin(GL.GL_TRIANGLES);
          gl.glColor3f(0, 1, 1);
         // gl.glVertex3f(0.1f, 0.1f, 0.1f);
          gl.glVertex3f(1f, 0f, 0f);
          gl.glVertex3f(0f, 1f, 0f);
          gl.glVertex3f(1f, 0f, 0f);
          
          
          gl.glEnd();
      
    }

    @Override
    public void dispose(GLAutoDrawable drawable) {
    }

    @Override
    public void init(GLAutoDrawable drawable) {
    	
    	 drawable.getGL().setSwapInterval(1);
    }

    @Override
    public void reshape(GLAutoDrawable drawable, int x, int y, int w, int h) {
    }




}